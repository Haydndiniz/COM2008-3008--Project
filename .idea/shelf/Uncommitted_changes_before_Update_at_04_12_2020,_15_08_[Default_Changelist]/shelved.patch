Index: Project/src/Project_Code/Admin/AddUser.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Project_Code.Admin;\n\nimport Project_Code.DBController;\nimport Project_Code.User;\nimport com.sun.xml.internal.rngom.parse.host.Base;\n\nimport javax.crypto.SecretKeyFactory;\nimport javax.crypto.spec.PBEKeySpec;\nimport javax.swing.*;\nimport java.awt.event.*;\nimport java.security.NoSuchAlgorithmException;\nimport java.security.SecureRandom;\nimport java.security.spec.InvalidKeySpecException;\nimport java.security.spec.KeySpec;\nimport java.sql.*;\nimport java.util.Base64;\nimport java.util.Random;\n\npublic class AddUser extends JPanel implements ActionListener {\n    private JFrame frame;\n    private JTextField forenameField;\n    private JTextField surnameField;\n    private AdminMain admin;\n    private JPasswordField passwordField;\n    private JComboBox<String> roleDropdown;\n    private JComboBox<String> titleDropdown;\n    private static final Random RANDOM = new SecureRandom();\n    byte[] salt = new byte[16];\n    private static DBController con = new DBController(\"team037\", \"ee143bc0\");\n\n\n    /**\n     * Parameterized constructor\n     * Creates the frame containing table of users\n     * @param f - the frame created\n     * @param admin - object of type Administrator\n     */\n\n    public AddUser(JFrame f, AdminMain admin) {\n        //bind the admin object\n        this.admin = admin;\n\n        setBounds(87, 13, 491, 453);\n        setLayout(null);\n\n        JLabel label = new JLabel(\"Add User:\");\n        label.setBounds(27, 22, 134, 25);\n        add(label);\n\n        // role label\n        JLabel roleLabel = new JLabel(\"Role:\");\n        roleLabel.setBounds(57, 112, 134, 25);\n        add(roleLabel);\n\n        roleDropdown = new JComboBox<String>(new String[]{\"Admin\", \"Registrar\", \"Teacher\", \"Student\"});\n        roleDropdown.setBounds(211, 112, 132, 25);\n        add(roleDropdown);\n\n        // title label\n        JLabel titleLabel = new JLabel(\"Title:\");\n        titleLabel.setBounds(57, 152, 134, 25);\n        add(titleLabel);\n\n        titleDropdown = new JComboBox<String>(new String[]{\"Mr\", \"Ms\"});\n        titleDropdown.setBounds(211, 152, 132, 25);\n        add(titleDropdown);\n\n        // forename label\n        JLabel forenameLabel = new JLabel(\"Forename:\");\n        forenameLabel.setBounds(57, 192, 134, 25);\n        add(forenameLabel);\n\n        // forenameField\n        forenameField = new JTextField(20);\n        forenameField.setBounds(211, 192, 132, 25);\n        add(forenameField);\n\n        // surname label\n        JLabel surnameLabel = new JLabel(\"Surname:\");\n        surnameLabel.setBounds(57, 232, 134, 25);\n        add(surnameLabel);\n\n        // surnameField\n        surnameField = new JTextField(20);\n        surnameField.setBounds(211, 232, 132, 25);\n        add(surnameField);\n\n        //password label\n        JLabel label_5 = new JLabel(\"Password:\");\n        label_5.setBounds(57, 272, 134, 25);\n        add(label_5);\n\n        //password field\n        passwordField = new JPasswordField();\n        passwordField.setText(generateRandomPassword());\n        passwordField.setBounds(211, 272, 132, 25);\n        add(passwordField);\n\n        //Add button\n        JButton btnAddUsr = new JButton(\"Add User\");\n        btnAddUsr.setBounds(291, 392, 97, 25);\n        add(btnAddUsr);\n        btnAddUsr.addActionListener(this);\n\n        //back button\n        JButton btnGoBack = new JButton(\"Go Back\");\n        btnGoBack.setBounds(12, 392, 97, 25);\n        add(btnGoBack);\n        btnGoBack.addActionListener(this);\n\n        frame=f;\n        frame.setContentPane(this);\n        frame.setBounds(87, 13, 400, 497);\n        frame.setLocationRelativeTo(null);\n    }\n\n    public static String generateRandomPassword() {\n        // ASCII range - alphanumeric (0-9, a-z, A-Z)\n        final String chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n        SecureRandom random = new SecureRandom();\n        StringBuilder pword = new StringBuilder();\n\n\n        for (int i = 0; i < 10; i++) {\n            int randomIndex = random.nextInt(chars.length());\n            pword.append(chars.charAt(randomIndex));\n        }\n        return pword.toString();\n    }\n\n    private boolean validateFields(String forename, String surname) {\n        //check if values have been given\n        if (forename.equals(\"\")) {\n            JOptionPane.showMessageDialog(null,\"Forename is a required field.\");\n            return false;\n        } else if (surname.equals(\"\")) {\n            JOptionPane.showMessageDialog(null,\"Surname is a required field.\");\n            return false;\n        } else if (forename.length() >= 45) {\n            JOptionPane.showMessageDialog(null,\"Forename is too long.\");\n            return false;\n        } else if (surname.length() >= 45) {\n            JOptionPane.showMessageDialog(null,\"Surname is too long.\");\n            return false;\n        } else if (this.admin.getRole() != \"Admin\") {\n            JOptionPane.showMessageDialog(null,\"Access denied.\");\n            return false;\n        } else {\n            return true;\n        }\n\n    }\n\n    private String createUsername(String forename, String surname) throws SQLException {\n\n        ResultSet result;\n\n        try {\n            String shortenedForename = forename.charAt(0) + \"%\";\n            String query = \"SELECT COUNT(*) FROM Users WHERE forename LIKE '\"+shortenedForename+\"' AND surname = '\"+surname+\"'\";\n            System.out.println(query);\n            result = con.performQuery(query);\n\n            int count = 0;\n            while(result.next()) {\n                System.out.println(result.getInt(1));\n                count = result.getInt(1);\n            }\n\n            if (count == 0) {\n                System.out.println(\"New User\");\n            } else {\n                System.out.println(\"Repeat found\");\n                return forename.charAt(0) + surname + String.valueOf(count+1);\n            }\n\n            System.out.println(result);\n\n            con.closeConnection();\n            con.closeStatement();\n\n            return forename.charAt(0) + surname + \"1\";\n\n        }\n        catch(SQLException ex) {\n            //display error message and leave the application\n            JOptionPane.showMessageDialog(null,\"There was an error, SQL.\",\n                    \"ERROR\", JOptionPane.ERROR_MESSAGE, null);\n            ex.printStackTrace();\n            System.exit(0);\n        }\n\n        return \"ERROR\";\n    }\n\n    private String createSalt() {\n        RANDOM.nextBytes(salt);\n        Base64.Encoder enc = Base64.getEncoder();\n        return enc.encodeToString(salt);\n    }\n\n    private String createHash(String password) throws NoSuchAlgorithmException, InvalidKeySpecException {\n        KeySpec spec = new PBEKeySpec(password.toCharArray(), salt, 65536, 128);\n        SecretKeyFactory f = SecretKeyFactory.getInstance(\"PBKDF2WithHmacSHA1\");\n        byte[] hash = f.generateSecret(spec).getEncoded();\n        Base64.Encoder enc = Base64.getEncoder();\n        return enc.encodeToString(hash);\n    }\n\n    private boolean addUser(String username, String role, String forename, String surname, String title, String email, String hash, String salt) throws SQLException {\n\n        try {\n\n            System.out.println(username);\n            System.out.println(role);\n            System.out.println(forename);\n            System.out.println(surname);\n            System.out.println(title);\n            System.out.println(email);\n            System.out.println(hash);\n            System.out.println(salt);\n\n            int changes;\n            //insert to UserAccounts\n            changes = con.performUpdate(\"INSERT INTO UserAccounts (username, password)\"\n                    + \" VALUES ('\"+username+\"','\"+hash+\"'\");\n            //insert to UserSalts\n            changes += con.performUpdate(\"INSERT INTO UserSalts (username, salt)\"\n                    + \" VALUES ('\"+username+\"','\"+salt+\"'\");\n            //insert to Users\n            changes += con.performUpdate(\"INSERT INTO Users (username, role, forename, surname, title, email)\"\n                    + \" VALUES ('\"+username+\"','\"+role+\"','\"+forename+\"','\"+surname+\"','\"+title+\"','\"+email+\"')\");\n\n            if (changes>0) {\n                con.closeConnection();\n                con.closeStatement();\n\n                return true;\n            }\n\n        }\n        catch(SQLException ex) {\n            //display error message and leave the application\n            JOptionPane.showMessageDialog(null,\"There was an error, SQL.\",\n                    \"ERROR\", JOptionPane.ERROR_MESSAGE, null);\n            ex.printStackTrace();\n            System.exit(0);\n        }\n\n        return false;\n    }\n\n    @Override\n    public void actionPerformed(ActionEvent e) {\n        String buttonPressed=e.getActionCommand();\n        switch (buttonPressed) {\n            case \"Go Back\":\n                setVisible(false);\n                frame.setContentPane(new AdminFrame(frame, admin.getUsername()));\n            case \"Add User\":\n                //setVisible(false);\n                String forename = forenameField.getText().replaceAll(\"\\\\p{Punct}\", \"\");\n                String surname = surnameField.getText().replaceAll(\"\\\\p{Punct}\", \"\");\n\n                if (validateFields(forename, surname)) {\n                    // generate username\n                    String username = null;\n                    try {\n                        username = createUsername(forename, surname);\n\n                        String salt = createSalt();\n                        String hash = createHash(passwordField.getPassword().toString());\n                        String email = username+\"@sheffield.ac.uk\";\n\n                        if (addUser(username, roleDropdown.getSelectedItem().toString(), forename, surname, titleDropdown.getSelectedItem().toString(), email, hash, salt)) {\n                            JOptionPane.showMessageDialog(null,\"User Registered Successfully\");\n                            setVisible(false);\n                            frame.setContentPane(new AdminFrame(frame, admin.getUsername()));\n                        }\n\n                        System.out.println(salt);\n                        System.out.println(email);\n\n                    } catch (SQLException throwables) {\n                        throwables.printStackTrace();\n                    } catch (NullPointerException n) {\n                        n.printStackTrace();\n                    } catch (NoSuchAlgorithmException noSuchAlgorithmException) {\n                        noSuchAlgorithmException.printStackTrace();\n                    } catch (InvalidKeySpecException invalidKeySpecException) {\n                        invalidKeySpecException.printStackTrace();\n                    }\n                    System.out.println(username);\n\n                }\n\n                break;\n            default:\n                throw new IllegalStateException(\"Unexpected value: \" + buttonPressed);\n        }\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Project/src/Project_Code/Admin/AddUser.java	(revision d7a5fbfeb9858d58967a0214ff277010e29683b8)
+++ Project/src/Project_Code/Admin/AddUser.java	(date 1607094513560)
@@ -52,7 +52,7 @@
         roleLabel.setBounds(57, 112, 134, 25);
         add(roleLabel);
 
-        roleDropdown = new JComboBox<String>(new String[]{"Admin", "Registrar", "Teacher", "Student"});
+        roleDropdown = new JComboBox<String>(new String[]{"Admin", "Registrar", "Teacher"});
         roleDropdown.setBounds(211, 112, 132, 25);
         add(roleDropdown);
 
@@ -143,7 +143,7 @@
         } else if (surname.length() >= 45) {
             JOptionPane.showMessageDialog(null,"Surname is too long.");
             return false;
-        } else if (this.admin.getRole() != "Admin") {
+        } else if (this.admin.getRole() != "admin") {
             JOptionPane.showMessageDialog(null,"Access denied.");
             return false;
         } else {
@@ -223,11 +223,10 @@
 
             int changes;
             //insert to UserAccounts
-            changes = con.performUpdate("INSERT INTO UserAccounts (username, password)"
-                    + " VALUES ('"+username+"','"+hash+"'");
+            changes = con.performUpdate("INSERT INTO UserAccounts (username, password) VALUES ('"+username+"','"+hash+"')");
             //insert to UserSalts
             changes += con.performUpdate("INSERT INTO UserSalts (username, salt)"
-                    + " VALUES ('"+username+"','"+salt+"'");
+                    + " VALUES ('"+username+"','"+salt+"')");
             //insert to Users
             changes += con.performUpdate("INSERT INTO Users (username, role, forename, surname, title, email)"
                     + " VALUES ('"+username+"','"+role+"','"+forename+"','"+surname+"','"+title+"','"+email+"')");
Index: .idea/uiDesigner.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"Palette2\">\n    <group name=\"Swing\">\n      <item class=\"com.intellij.uiDesigner.HSpacer\" tooltip-text=\"Horizontal Spacer\" icon=\"/com/intellij/uiDesigner/icons/hspacer.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n        <default-constraints vsize-policy=\"1\" hsize-policy=\"6\" anchor=\"0\" fill=\"1\" />\n      </item>\n      <item class=\"com.intellij.uiDesigner.VSpacer\" tooltip-text=\"Vertical Spacer\" icon=\"/com/intellij/uiDesigner/icons/vspacer.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n        <default-constraints vsize-policy=\"6\" hsize-policy=\"1\" anchor=\"0\" fill=\"2\" />\n      </item>\n      <item class=\"javax.swing.JPanel\" icon=\"/com/intellij/uiDesigner/icons/panel.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n        <default-constraints vsize-policy=\"3\" hsize-policy=\"3\" anchor=\"0\" fill=\"3\" />\n      </item>\n      <item class=\"javax.swing.JScrollPane\" icon=\"/com/intellij/uiDesigner/icons/scrollPane.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"true\">\n        <default-constraints vsize-policy=\"7\" hsize-policy=\"7\" anchor=\"0\" fill=\"3\" />\n      </item>\n      <item class=\"javax.swing.JButton\" icon=\"/com/intellij/uiDesigner/icons/button.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n        <default-constraints vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"0\" fill=\"1\" />\n        <initial-values>\n          <property name=\"text\" value=\"Button\" />\n        </initial-values>\n      </item>\n      <item class=\"javax.swing.JRadioButton\" icon=\"/com/intellij/uiDesigner/icons/radioButton.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n        <default-constraints vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"8\" fill=\"0\" />\n        <initial-values>\n          <property name=\"text\" value=\"RadioButton\" />\n        </initial-values>\n      </item>\n      <item class=\"javax.swing.JCheckBox\" icon=\"/com/intellij/uiDesigner/icons/checkBox.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n        <default-constraints vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"8\" fill=\"0\" />\n        <initial-values>\n          <property name=\"text\" value=\"CheckBox\" />\n        </initial-values>\n      </item>\n      <item class=\"javax.swing.JLabel\" icon=\"/com/intellij/uiDesigner/icons/label.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n        <default-constraints vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"8\" fill=\"0\" />\n        <initial-values>\n          <property name=\"text\" value=\"Label\" />\n        </initial-values>\n      </item>\n      <item class=\"javax.swing.JPasswordField\" icon=\"/com/intellij/uiDesigner/icons/passwordField.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\">\n          <preferred-size width=\"150\" height=\"-1\" />\n        </default-constraints>\n      </item>\n      <item class=\"javax.swing.JFormattedTextField\" icon=\"/com/intellij/uiDesigner/icons/formattedTextField.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\">\n          <preferred-size width=\"150\" height=\"-1\" />\n        </default-constraints>\n      </item>\n      <item class=\"javax.swing.JTextArea\" icon=\"/com/intellij/uiDesigner/icons/textArea.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n        <default-constraints vsize-policy=\"6\" hsize-policy=\"6\" anchor=\"0\" fill=\"3\">\n          <preferred-size width=\"150\" height=\"50\" />\n        </default-constraints>\n      </item>\n      <item class=\"javax.swing.JTextField\" icon=\"/com/intellij/uiDesigner/icons/textField.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\">\n          <preferred-size width=\"150\" height=\"-1\" />\n        </default-constraints>\n      </item>\n      <item class=\"javax.swing.JTextPane\" icon=\"/com/intellij/uiDesigner/icons/textPane.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n        <default-constraints vsize-policy=\"6\" hsize-policy=\"6\" anchor=\"0\" fill=\"3\">\n          <preferred-size width=\"150\" height=\"50\" />\n        </default-constraints>\n      </item>\n      <item class=\"javax.swing.JEditorPane\" icon=\"/com/intellij/uiDesigner/icons/editorPane.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n        <default-constraints vsize-policy=\"6\" hsize-policy=\"6\" anchor=\"0\" fill=\"3\">\n          <preferred-size width=\"150\" height=\"50\" />\n        </default-constraints>\n      </item>\n      <item class=\"javax.swing.JComboBox\" icon=\"/com/intellij/uiDesigner/icons/comboBox.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n        <default-constraints vsize-policy=\"0\" hsize-policy=\"2\" anchor=\"8\" fill=\"1\" />\n      </item>\n      <item class=\"javax.swing.JTable\" icon=\"/com/intellij/uiDesigner/icons/table.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n        <default-constraints vsize-policy=\"6\" hsize-policy=\"6\" anchor=\"0\" fill=\"3\">\n          <preferred-size width=\"150\" height=\"50\" />\n        </default-constraints>\n      </item>\n      <item class=\"javax.swing.JList\" icon=\"/com/intellij/uiDesigner/icons/list.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n        <default-constraints vsize-policy=\"6\" hsize-policy=\"2\" anchor=\"0\" fill=\"3\">\n          <preferred-size width=\"150\" height=\"50\" />\n        </default-constraints>\n      </item>\n      <item class=\"javax.swing.JTree\" icon=\"/com/intellij/uiDesigner/icons/tree.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n        <default-constraints vsize-policy=\"6\" hsize-policy=\"6\" anchor=\"0\" fill=\"3\">\n          <preferred-size width=\"150\" height=\"50\" />\n        </default-constraints>\n      </item>\n      <item class=\"javax.swing.JTabbedPane\" icon=\"/com/intellij/uiDesigner/icons/tabbedPane.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n        <default-constraints vsize-policy=\"3\" hsize-policy=\"3\" anchor=\"0\" fill=\"3\">\n          <preferred-size width=\"200\" height=\"200\" />\n        </default-constraints>\n      </item>\n      <item class=\"javax.swing.JSplitPane\" icon=\"/com/intellij/uiDesigner/icons/splitPane.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n        <default-constraints vsize-policy=\"3\" hsize-policy=\"3\" anchor=\"0\" fill=\"3\">\n          <preferred-size width=\"200\" height=\"200\" />\n        </default-constraints>\n      </item>\n      <item class=\"javax.swing.JSpinner\" icon=\"/com/intellij/uiDesigner/icons/spinner.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\" />\n      </item>\n      <item class=\"javax.swing.JSlider\" icon=\"/com/intellij/uiDesigner/icons/slider.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\" />\n      </item>\n      <item class=\"javax.swing.JSeparator\" icon=\"/com/intellij/uiDesigner/icons/separator.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n        <default-constraints vsize-policy=\"6\" hsize-policy=\"6\" anchor=\"0\" fill=\"3\" />\n      </item>\n      <item class=\"javax.swing.JProgressBar\" icon=\"/com/intellij/uiDesigner/icons/progressbar.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"0\" fill=\"1\" />\n      </item>\n      <item class=\"javax.swing.JToolBar\" icon=\"/com/intellij/uiDesigner/icons/toolbar.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"0\" fill=\"1\">\n          <preferred-size width=\"-1\" height=\"20\" />\n        </default-constraints>\n      </item>\n      <item class=\"javax.swing.JToolBar$Separator\" icon=\"/com/intellij/uiDesigner/icons/toolbarSeparator.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n        <default-constraints vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"0\" fill=\"1\" />\n      </item>\n      <item class=\"javax.swing.JScrollBar\" icon=\"/com/intellij/uiDesigner/icons/scrollbar.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n        <default-constraints vsize-policy=\"6\" hsize-policy=\"0\" anchor=\"0\" fill=\"2\" />\n      </item>\n    </group>\n  </component>\n  <component name=\"uidesigner-configuration\">\n    <option name=\"INSTRUMENT_CLASSES\" value=\"false\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/uiDesigner.xml	(revision d7a5fbfeb9858d58967a0214ff277010e29683b8)
+++ .idea/uiDesigner.xml	(date 1607092065101)
@@ -8,9 +8,6 @@
       <item class="com.intellij.uiDesigner.VSpacer" tooltip-text="Vertical Spacer" icon="/com/intellij/uiDesigner/icons/vspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
         <default-constraints vsize-policy="6" hsize-policy="1" anchor="0" fill="2" />
       </item>
-      <item class="javax.swing.JPanel" icon="/com/intellij/uiDesigner/icons/panel.png" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3" />
-      </item>
       <item class="javax.swing.JScrollPane" icon="/com/intellij/uiDesigner/icons/scrollPane.png" removable="false" auto-create-binding="false" can-attach-label="true">
         <default-constraints vsize-policy="7" hsize-policy="7" anchor="0" fill="3" />
       </item>
@@ -19,6 +16,9 @@
         <initial-values>
           <property name="text" value="Button" />
         </initial-values>
+      </item>
+      <item class="javax.swing.JPanel" icon="/com/intellij/uiDesigner/icons/panel.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3" />
       </item>
       <item class="javax.swing.JRadioButton" icon="/com/intellij/uiDesigner/icons/radioButton.png" removable="false" auto-create-binding="true" can-attach-label="false">
         <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"BranchesTreeState\">\n    <expand>\n      <path>\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\n        <item name=\"LOCAL_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\n      </path>\n      <path>\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\n        <item name=\"REMOTE_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\n      </path>\n      <path>\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\n        <item name=\"REMOTE_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\n        <item name=\"GROUP_NODE:origin\" type=\"e8cecc67:BranchNodeDescriptor\" />\n      </path>\n    </expand>\n    <select />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"c9fe5b6b-8c40-4624-9d20-5c2d54015260\" name=\"Default Changelist\" comment=\"updated file structure\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Project/src/Project_Code/DBController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Project/src/Project_Code/DBController.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Project/src/Project_Code/Teacher/TeacherMain.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Project/src/Project_Code/Teacher/TeacherMain.java\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"GithubPullRequestsUISettings\">\n    <option name=\"hiddenUrls\">\n      <set>\n        <option value=\"https://github.com/Haydndiniz/COM2008-3008--Project\" />\n      </set>\n    </option>\n  </component>\n  <component name=\"ProjectId\" id=\"1k41V02mWPXtjeHKVwaLPMQOzex\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\n  </component>\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">\n    <property name=\"ASKED_ADD_EXTERNAL_FILES\" value=\"true\" />\n    <property name=\"ASKED_SHARE_PROJECT_CONFIGURATION_FILES\" value=\"true\" />\n    <property name=\"DatabaseDriversLRU\" value=\"mysql\" />\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\n    <property name=\"UI_DESIGNER_EDITOR_MODE.UIDesignerToolWindowManager.WIDTH\" value=\"324\" />\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\n    <property name=\"aspect.path.notification.shown\" value=\"true\" />\n    <property name=\"jdk.selected.JAVA_MODULE\" value=\"1.8\" />\n    <property name=\"project.structure.last.edited\" value=\"Libraries\" />\n    <property name=\"project.structure.proportion\" value=\"0.15\" />\n    <property name=\"project.structure.side.proportion\" value=\"0.2\" />\n    <property name=\"restartRequiresConfirmation\" value=\"false\" />\n    <property name=\"settings.editor.selected.configurable\" value=\"project.propGUI\" />\n  </component>\n  <component name=\"RecentsManager\">\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/Project/Drivers\" />\n      <recent name=\"$PROJECT_DIR$\" />\n    </key>\n  </component>\n  <component name=\"RunManager\" selected=\"Application.Main\">\n    <configuration name=\"DBController\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"Project_Code.DBController\" />\n      <module name=\"Project\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"Project_Code.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"DriverChecker\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"DriverChecker\" />\n      <module name=\"Project\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"Project_Code.Main\" />\n      <module name=\"Project\" />\n      <option name=\"ENABLE_SWING_INSPECTOR\" value=\"true\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"Project_Code.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration default=\"true\" type=\"ArquillianJUnit\" factoryName=\"\" nameIsGenerated=\"true\">\n      <option name=\"arquillianRunConfiguration\">\n        <value>\n          <option name=\"containerStateName\" value=\"\" />\n        </value>\n      </option>\n      <option name=\"TEST_OBJECT\" value=\"class\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration default=\"true\" type=\"JetRunConfigurationType\">\n      <module name=\"COM2008-3008--Project\" />\n      <option name=\"VM_PARAMETERS\" />\n      <option name=\"PROGRAM_PARAMETERS\" />\n      <option name=\"ALTERNATIVE_JRE_PATH_ENABLED\" value=\"false\" />\n      <option name=\"ALTERNATIVE_JRE_PATH\" />\n      <option name=\"PASS_PARENT_ENVS\" value=\"true\" />\n      <option name=\"MAIN_CLASS_NAME\" />\n      <option name=\"WORKING_DIRECTORY\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration default=\"true\" type=\"KotlinStandaloneScriptRunConfigurationType\">\n      <module name=\"COM2008-3008--Project\" />\n      <option name=\"filePath\" />\n      <option name=\"vmParameters\" />\n      <option name=\"alternativeJrePath\" />\n      <option name=\"programParameters\" />\n      <option name=\"passParentEnvs\" value=\"true\" />\n      <option name=\"workingDirectory\" />\n      <option name=\"isAlternativeJrePathEnabled\" value=\"false\" />\n      <option name=\"VM_PARAMETERS\" />\n      <option name=\"PROGRAM_PARAMETERS\" />\n      <option name=\"ALTERNATIVE_JRE_PATH_ENABLED\" value=\"false\" />\n      <option name=\"ALTERNATIVE_JRE_PATH\" />\n      <option name=\"PASS_PARENT_ENVS\" value=\"true\" />\n      <option name=\"MAIN_CLASS_NAME\" />\n      <option name=\"WORKING_DIRECTORY\" />\n      <option name=\"filePath\" />\n      <option name=\"vmParameters\" />\n      <option name=\"alternativeJrePath\" />\n      <option name=\"programParameters\" />\n      <option name=\"passParentEnvs\" value=\"true\" />\n      <option name=\"workingDirectory\" />\n      <option name=\"isAlternativeJrePathEnabled\" value=\"false\" />\n      <option name=\"VM_PARAMETERS\" />\n      <option name=\"PROGRAM_PARAMETERS\" />\n      <option name=\"ALTERNATIVE_JRE_PATH_ENABLED\" value=\"false\" />\n      <option name=\"ALTERNATIVE_JRE_PATH\" />\n      <option name=\"PASS_PARENT_ENVS\" value=\"true\" />\n      <option name=\"MAIN_CLASS_NAME\" />\n      <option name=\"WORKING_DIRECTORY\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Application.Main\" />\n        <item itemvalue=\"Application.DBController\" />\n        <item itemvalue=\"Application.DriverChecker\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"SvnConfiguration\">\n    <configuration />\n  </component>\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"c9fe5b6b-8c40-4624-9d20-5c2d54015260\" name=\"Default Changelist\" comment=\"\" />\n      <created>1604945071288</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1604945071288</updated>\n      <workItem from=\"1604945073305\" duration=\"140000\" />\n      <workItem from=\"1604953560922\" duration=\"1146000\" />\n      <workItem from=\"1606132437553\" duration=\"10000\" />\n      <workItem from=\"1606135067611\" duration=\"1840000\" />\n      <workItem from=\"1606145527859\" duration=\"2541000\" />\n      <workItem from=\"1606335791253\" duration=\"2866000\" />\n      <workItem from=\"1606340193428\" duration=\"22000\" />\n      <workItem from=\"1607011255536\" duration=\"5137000\" />\n      <workItem from=\"1607037954128\" duration=\"5566000\" />\n      <workItem from=\"1607069520935\" duration=\"20720000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"updated file structure\">\n      <created>1606135677092</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1606135677092</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"updated file structure\">\n      <created>1606135717163</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1606135717163</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"updated file structure\">\n      <created>1606137857475</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1606137857475</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"Added JDBC and start files\">\n      <created>1606148340589</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1606148340589</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"Converted openConnection function to try-catch block.\">\n      <created>1606336335317</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1606336335317</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"Converted openConnection function to try-catch block.\">\n      <created>1606336390719</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1606336390719</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"Added teacher package\">\n      <created>1607091699601</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1607091699601</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"8\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\n    <MESSAGE value=\"updated file structure\" />\n    <MESSAGE value=\"Added JDBC and start files\" />\n    <MESSAGE value=\"Converted openConnection function to try-catch block.\" />\n    <MESSAGE value=\"Added login frame and template admin structure\" />\n    <MESSAGE value=\"Added AdminFrame\" />\n    <MESSAGE value=\"Added view users in admin package\" />\n    <MESSAGE value=\"Added teacher package\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Added teacher package\" />\n  </component>\n  <component name=\"WindowStateProjectService\">\n    <state x=\"445\" y=\"293\" key=\"#Notifications\" timestamp=\"1606146438003\">\n      <screen x=\"0\" y=\"25\" width=\"1440\" height=\"875\" />\n    </state>\n    <state x=\"445\" y=\"292\" key=\"#Notifications/0.23.1440.877@0.23.1440.877\" timestamp=\"1604954950419\" />\n    <state x=\"445\" y=\"293\" key=\"#Notifications/0.25.1440.875@0.25.1440.875\" timestamp=\"1606146438003\" />\n    <state x=\"208\" y=\"45\" key=\"#Project_Structure\" timestamp=\"1606146739544\">\n      <screen x=\"0\" y=\"25\" width=\"1440\" height=\"875\" />\n    </state>\n    <state x=\"208\" y=\"43\" key=\"#Project_Structure/0.23.1440.877@0.23.1440.877\" timestamp=\"1604945214163\" />\n    <state x=\"208\" y=\"45\" key=\"#Project_Structure/0.25.1440.875@0.25.1440.875\" timestamp=\"1606146739544\" />\n    <state x=\"333\" y=\"38\" width=\"1071\" height=\"724\" key=\"#com.intellij.execution.impl.EditConfigurationsDialog\" timestamp=\"1606146557548\">\n      <screen x=\"0\" y=\"25\" width=\"1440\" height=\"875\" />\n    </state>\n    <state x=\"320\" y=\"107\" width=\"1071\" height=\"724\" key=\"#com.intellij.execution.impl.EditConfigurationsDialog/0.0.1440.900@0.0.1440.900\" timestamp=\"1606143389344\" />\n    <state x=\"320\" y=\"127\" key=\"#com.intellij.execution.impl.EditConfigurationsDialog/0.23.1440.877@0.23.1440.877\" timestamp=\"1604955356014\" />\n    <state x=\"333\" y=\"38\" key=\"#com.intellij.execution.impl.EditConfigurationsDialog/0.25.1440.875@0.25.1440.875\" timestamp=\"1606146557548\" />\n    <state x=\"678\" y=\"233\" key=\"#com.intellij.ide.util.MemberChooser\" timestamp=\"1606582188704\">\n      <screen x=\"0\" y=\"25\" width=\"1792\" height=\"1095\" />\n    </state>\n    <state x=\"581\" y=\"203\" key=\"#com.intellij.ide.util.MemberChooser/0.25.1536.935@0.25.1536.935\" timestamp=\"1606415706744\" />\n    <state x=\"678\" y=\"233\" key=\"#com.intellij.ide.util.MemberChooser/0.25.1792.1095@0.25.1792.1095\" timestamp=\"1606582188704\" />\n    <state x=\"593\" y=\"254\" key=\"#com.intellij.ide.util.TreeClassChooserDialog\" timestamp=\"1606138088437\">\n      <screen x=\"0\" y=\"0\" width=\"1440\" height=\"900\" />\n    </state>\n    <state x=\"593\" y=\"254\" key=\"#com.intellij.ide.util.TreeClassChooserDialog/0.0.1440.900@0.0.1440.900\" timestamp=\"1606138088437\" />\n    <state x=\"780\" y=\"489\" width=\"433\" height=\"217\" key=\"#com.intellij.refactoring.move.moveClassesOrPackages.MoveClassesOrPackagesDialog.classes\" timestamp=\"1607079800707\">\n      <screen x=\"62\" y=\"0\" width=\"1858\" height=\"1080\" />\n    </state>\n    <state x=\"780\" y=\"489\" width=\"433\" height=\"217\" key=\"#com.intellij.refactoring.move.moveClassesOrPackages.MoveClassesOrPackagesDialog.classes/62.0.1858.1080/1920.0.1366.768@62.0.1858.1080\" timestamp=\"1607079800707\" />\n    <state x=\"817\" y=\"314\" key=\"ANALYSIS_DLG_com.intellij.analysis.BaseAnalysisAction$1\" timestamp=\"1606902985724\">\n      <screen x=\"63\" y=\"0\" width=\"1857\" height=\"1080\" />\n    </state>\n    <state x=\"817\" y=\"314\" key=\"ANALYSIS_DLG_com.intellij.analysis.BaseAnalysisAction$1/63.0.1857.1080/1920.0.1366.768@63.0.1857.1080\" timestamp=\"1606902985724\" />\n    <state x=\"571\" y=\"206\" key=\"CreateSnapShotAction.MyDialog\" timestamp=\"1606436760181\">\n      <screen x=\"0\" y=\"25\" width=\"1536\" height=\"935\" />\n    </state>\n    <state x=\"571\" y=\"206\" key=\"CreateSnapShotAction.MyDialog/0.25.1536.935@0.25.1536.935\" timestamp=\"1606436760181\" />\n    <state width=\"1719\" height=\"118\" key=\"GridCell.Tab.0.bottom\" timestamp=\"1607091683797\">\n      <screen x=\"64\" y=\"0\" width=\"1856\" height=\"1080\" />\n    </state>\n    <state width=\"2518\" height=\"261\" key=\"GridCell.Tab.0.bottom/0.0.2560.1440/-2560.0.2560.1440@0.0.2560.1440\" timestamp=\"1606338681435\" />\n    <state width=\"699\" height=\"189\" key=\"GridCell.Tab.0.bottom/0.25.1440.875@0.25.1440.875\" timestamp=\"1606148231324\" />\n    <state width=\"747\" height=\"144\" key=\"GridCell.Tab.0.bottom/0.25.1536.935@0.0.1536.960\" timestamp=\"1606423790374\" />\n    <state width=\"747\" height=\"144\" key=\"GridCell.Tab.0.bottom/0.25.1536.935@0.25.1536.935\" timestamp=\"1606436743287\" />\n    <state width=\"875\" height=\"176\" key=\"GridCell.Tab.0.bottom/0.25.1792.1095@0.0.1792.1120\" timestamp=\"1606582546823\" />\n    <state width=\"875\" height=\"176\" key=\"GridCell.Tab.0.bottom/0.25.1792.1095@0.25.1792.1095\" timestamp=\"1606658016568\" />\n    <state width=\"1719\" height=\"121\" key=\"GridCell.Tab.0.bottom/62.0.1858.1080/1920.0.1366.768@62.0.1858.1080\" timestamp=\"1607088956270\" />\n    <state width=\"1559\" height=\"151\" key=\"GridCell.Tab.0.bottom/63.0.1857.1080/1920.0.1366.768@63.0.1857.1080\" timestamp=\"1606938224490\" />\n    <state width=\"1719\" height=\"118\" key=\"GridCell.Tab.0.bottom/64.0.1856.1080/1920.0.1366.768@64.0.1856.1080\" timestamp=\"1607091683797\" />\n    <state width=\"1719\" height=\"118\" key=\"GridCell.Tab.0.center\" timestamp=\"1607091683797\">\n      <screen x=\"64\" y=\"0\" width=\"1856\" height=\"1080\" />\n    </state>\n    <state width=\"2518\" height=\"261\" key=\"GridCell.Tab.0.center/0.0.2560.1440/-2560.0.2560.1440@0.0.2560.1440\" timestamp=\"1606338681433\" />\n    <state width=\"699\" height=\"189\" key=\"GridCell.Tab.0.center/0.25.1440.875@0.25.1440.875\" timestamp=\"1606148231323\" />\n    <state width=\"747\" height=\"144\" key=\"GridCell.Tab.0.center/0.25.1536.935@0.0.1536.960\" timestamp=\"1606423790372\" />\n    <state width=\"747\" height=\"144\" key=\"GridCell.Tab.0.center/0.25.1536.935@0.25.1536.935\" timestamp=\"1606436743286\" />\n    <state width=\"875\" height=\"176\" key=\"GridCell.Tab.0.center/0.25.1792.1095@0.0.1792.1120\" timestamp=\"1606582546822\" />\n    <state width=\"875\" height=\"176\" key=\"GridCell.Tab.0.center/0.25.1792.1095@0.25.1792.1095\" timestamp=\"1606658016567\" />\n    <state width=\"1719\" height=\"121\" key=\"GridCell.Tab.0.center/62.0.1858.1080/1920.0.1366.768@62.0.1858.1080\" timestamp=\"1607088956270\" />\n    <state width=\"1559\" height=\"151\" key=\"GridCell.Tab.0.center/63.0.1857.1080/1920.0.1366.768@63.0.1857.1080\" timestamp=\"1606938224490\" />\n    <state width=\"1719\" height=\"118\" key=\"GridCell.Tab.0.center/64.0.1856.1080/1920.0.1366.768@64.0.1856.1080\" timestamp=\"1607091683797\" />\n    <state width=\"1719\" height=\"118\" key=\"GridCell.Tab.0.left\" timestamp=\"1607091683797\">\n      <screen x=\"64\" y=\"0\" width=\"1856\" height=\"1080\" />\n    </state>\n    <state width=\"747\" height=\"144\" key=\"GridCell.Tab.0.left/0.0.1536.960@0.0.1536.960\" timestamp=\"1606423790368\" />\n    <state width=\"875\" height=\"176\" key=\"GridCell.Tab.0.left/0.0.1792.1120@0.0.1792.1120\" timestamp=\"1606582546815\" />\n    <state width=\"2518\" height=\"261\" key=\"GridCell.Tab.0.left/0.0.2560.1440/-2560.0.2560.1440@0.0.2560.1440\" timestamp=\"1606338681432\" />\n    <state width=\"699\" height=\"189\" key=\"GridCell.Tab.0.left/0.25.1440.875@0.25.1440.875\" timestamp=\"1606148231323\" />\n    <state width=\"747\" height=\"144\" key=\"GridCell.Tab.0.left/0.25.1536.935@0.25.1536.935\" timestamp=\"1606436743286\" />\n    <state width=\"875\" height=\"176\" key=\"GridCell.Tab.0.left/0.25.1792.1095@0.25.1792.1095\" timestamp=\"1606658016567\" />\n    <state width=\"1719\" height=\"121\" key=\"GridCell.Tab.0.left/62.0.1858.1080/1920.0.1366.768@62.0.1858.1080\" timestamp=\"1607088956269\" />\n    <state width=\"1559\" height=\"151\" key=\"GridCell.Tab.0.left/63.0.1857.1080/1920.0.1366.768@63.0.1857.1080\" timestamp=\"1606938224490\" />\n    <state width=\"1719\" height=\"118\" key=\"GridCell.Tab.0.left/64.0.1856.1080/1920.0.1366.768@64.0.1856.1080\" timestamp=\"1607091683797\" />\n    <state width=\"1719\" height=\"118\" key=\"GridCell.Tab.0.right\" timestamp=\"1607091683797\">\n      <screen x=\"64\" y=\"0\" width=\"1856\" height=\"1080\" />\n    </state>\n    <state width=\"2518\" height=\"261\" key=\"GridCell.Tab.0.right/0.0.2560.1440/-2560.0.2560.1440@0.0.2560.1440\" timestamp=\"1606338681434\" />\n    <state width=\"699\" height=\"189\" key=\"GridCell.Tab.0.right/0.25.1440.875@0.25.1440.875\" timestamp=\"1606148231323\" />\n    <state width=\"747\" height=\"144\" key=\"GridCell.Tab.0.right/0.25.1536.935@0.0.1536.960\" timestamp=\"1606423790374\" />\n    <state width=\"747\" height=\"144\" key=\"GridCell.Tab.0.right/0.25.1536.935@0.25.1536.935\" timestamp=\"1606436743287\" />\n    <state width=\"875\" height=\"176\" key=\"GridCell.Tab.0.right/0.25.1792.1095@0.0.1792.1120\" timestamp=\"1606582546822\" />\n    <state width=\"875\" height=\"176\" key=\"GridCell.Tab.0.right/0.25.1792.1095@0.25.1792.1095\" timestamp=\"1606658016567\" />\n    <state width=\"1719\" height=\"121\" key=\"GridCell.Tab.0.right/62.0.1858.1080/1920.0.1366.768@62.0.1858.1080\" timestamp=\"1607088956270\" />\n    <state width=\"1559\" height=\"151\" key=\"GridCell.Tab.0.right/63.0.1857.1080/1920.0.1366.768@63.0.1857.1080\" timestamp=\"1606938224490\" />\n    <state width=\"1719\" height=\"118\" key=\"GridCell.Tab.0.right/64.0.1856.1080/1920.0.1366.768@64.0.1856.1080\" timestamp=\"1607091683797\" />\n    <state width=\"1719\" height=\"305\" key=\"GridCell.Tab.1.bottom\" timestamp=\"1607087330675\">\n      <screen x=\"62\" y=\"0\" width=\"1858\" height=\"1080\" />\n    </state>\n    <state width=\"2518\" height=\"520\" key=\"GridCell.Tab.1.bottom/0.0.2560.1440/-2560.0.2560.1440@0.0.2560.1440\" timestamp=\"1606338641177\" />\n    <state width=\"1719\" height=\"305\" key=\"GridCell.Tab.1.bottom/62.0.1858.1080/1920.0.1366.768@62.0.1858.1080\" timestamp=\"1607087330675\" />\n    <state width=\"1719\" height=\"305\" key=\"GridCell.Tab.1.center\" timestamp=\"1607087330674\">\n      <screen x=\"62\" y=\"0\" width=\"1858\" height=\"1080\" />\n    </state>\n    <state width=\"2518\" height=\"520\" key=\"GridCell.Tab.1.center/0.0.2560.1440/-2560.0.2560.1440@0.0.2560.1440\" timestamp=\"1606338641173\" />\n    <state width=\"1719\" height=\"305\" key=\"GridCell.Tab.1.center/62.0.1858.1080/1920.0.1366.768@62.0.1858.1080\" timestamp=\"1607087330674\" />\n    <state width=\"1719\" height=\"305\" key=\"GridCell.Tab.1.left\" timestamp=\"1607087330674\">\n      <screen x=\"62\" y=\"0\" width=\"1858\" height=\"1080\" />\n    </state>\n    <state width=\"2518\" height=\"520\" key=\"GridCell.Tab.1.left/0.0.2560.1440/-2560.0.2560.1440@0.0.2560.1440\" timestamp=\"1606338641173\" />\n    <state width=\"1719\" height=\"305\" key=\"GridCell.Tab.1.left/62.0.1858.1080/1920.0.1366.768@62.0.1858.1080\" timestamp=\"1607087330674\" />\n    <state width=\"1719\" height=\"305\" key=\"GridCell.Tab.1.right\" timestamp=\"1607087330674\">\n      <screen x=\"62\" y=\"0\" width=\"1858\" height=\"1080\" />\n    </state>\n    <state width=\"2518\" height=\"520\" key=\"GridCell.Tab.1.right/0.0.2560.1440/-2560.0.2560.1440@0.0.2560.1440\" timestamp=\"1606338641174\" />\n    <state width=\"1719\" height=\"305\" key=\"GridCell.Tab.1.right/62.0.1858.1080/1920.0.1366.768@62.0.1858.1080\" timestamp=\"1607087330674\" />\n    <state width=\"229\" height=\"457\" key=\"HiddenNamespacesPopup\" timestamp=\"1606146403053\">\n      <screen x=\"0\" y=\"25\" width=\"1440\" height=\"875\" />\n    </state>\n    <state width=\"229\" height=\"457\" key=\"HiddenNamespacesPopup/0.25.1440.875@0.25.1440.875\" timestamp=\"1606146403053\" />\n    <state x=\"240\" y=\"132\" key=\"MergeDialog\" timestamp=\"1607091746834\">\n      <screen x=\"64\" y=\"0\" width=\"1856\" height=\"1080\" />\n    </state>\n    <state x=\"238\" y=\"132\" key=\"MergeDialog/62.0.1858.1080/1920.0.1366.768@62.0.1858.1080\" timestamp=\"1607078336128\" />\n    <state x=\"239\" y=\"132\" key=\"MergeDialog/63.0.1857.1080/1920.0.1366.768@63.0.1857.1080\" timestamp=\"1606915242698\" />\n    <state x=\"240\" y=\"132\" key=\"MergeDialog/64.0.1856.1080/1920.0.1366.768@64.0.1856.1080\" timestamp=\"1607091746834\" />\n    <state x=\"635\" y=\"356\" key=\"MultipleFileMergeDialog\" timestamp=\"1607091748782\">\n      <screen x=\"64\" y=\"0\" width=\"1856\" height=\"1080\" />\n    </state>\n    <state x=\"635\" y=\"356\" key=\"MultipleFileMergeDialog/64.0.1856.1080/1920.0.1366.768@64.0.1856.1080\" timestamp=\"1607091748782\" />\n    <state x=\"236\" y=\"59\" key=\"SettingsEditor\" timestamp=\"1606436281206\">\n      <screen x=\"0\" y=\"25\" width=\"1536\" height=\"935\" />\n    </state>\n    <state x=\"221\" y=\"41\" key=\"SettingsEditor/0.0.1440.900@0.0.1440.900\" timestamp=\"1606137812869\" />\n    <state x=\"221\" y=\"63\" key=\"SettingsEditor/0.23.1440.877@0.23.1440.877\" timestamp=\"1604955224661\" />\n    <state x=\"221\" y=\"57\" key=\"SettingsEditor/0.25.1440.875@0.25.1440.875\" timestamp=\"1606147618189\" />\n    <state x=\"236\" y=\"59\" key=\"SettingsEditor/0.25.1536.935@0.25.1536.935\" timestamp=\"1606436281206\" />\n    <state x=\"476\" y=\"212\" key=\"Vcs.Push.Dialog.v2\" timestamp=\"1607091701205\">\n      <screen x=\"64\" y=\"0\" width=\"1856\" height=\"1080\" />\n    </state>\n    <state x=\"320\" y=\"177\" key=\"Vcs.Push.Dialog.v2/0.0.1440.900@0.0.1440.900\" timestamp=\"1606137861383\" />\n    <state x=\"569\" y=\"283\" key=\"Vcs.Push.Dialog.v2/0.0.2560.1440/-2560.0.2560.1440@0.0.2560.1440\" timestamp=\"1606336400622\" />\n    <state x=\"320\" y=\"197\" key=\"Vcs.Push.Dialog.v2/0.25.1440.875@0.25.1440.875\" timestamp=\"1606148361914\" />\n    <state x=\"341\" y=\"209\" key=\"Vcs.Push.Dialog.v2/0.25.1536.935@0.25.1536.935\" timestamp=\"1606423849139\" />\n    <state x=\"398\" y=\"240\" key=\"Vcs.Push.Dialog.v2/0.25.1792.1095@0.25.1792.1095\" timestamp=\"1606590926330\" />\n    <state x=\"476\" y=\"212\" key=\"Vcs.Push.Dialog.v2/64.0.1856.1080/1920.0.1366.768@64.0.1856.1080\" timestamp=\"1607091701205\" />\n    <state x=\"207\" y=\"224\" width=\"1579\" height=\"742\" key=\"com.intellij.history.integration.ui.views.FileHistoryDialog\" timestamp=\"1607091839347\">\n      <screen x=\"64\" y=\"0\" width=\"1856\" height=\"1080\" />\n    </state>\n    <state x=\"207\" y=\"224\" width=\"1579\" height=\"742\" key=\"com.intellij.history.integration.ui.views.FileHistoryDialog/64.0.1856.1080/1920.0.1366.768@64.0.1856.1080\" timestamp=\"1607091839347\" />\n    <state x=\"732\" y=\"441\" key=\"com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2\" timestamp=\"1607091786602\">\n      <screen x=\"64\" y=\"0\" width=\"1856\" height=\"1080\" />\n    </state>\n    <state x=\"518\" y=\"368\" key=\"com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/0.0.1440.900@0.0.1440.900\" timestamp=\"1606135644550\" />\n    <state x=\"921\" y=\"589\" key=\"com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/0.0.2560.1440/-2560.0.2560.1440@0.0.2560.1440\" timestamp=\"1606336460927\" />\n    <state x=\"518\" y=\"382\" key=\"com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/0.23.1440.877@0.23.1440.877\" timestamp=\"1606135106799\" />\n    <state x=\"553\" y=\"407\" key=\"com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/0.25.1536.935@0.25.1536.935\" timestamp=\"1606435341695\" />\n    <state x=\"731\" y=\"441\" key=\"com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/62.0.1858.1080/1920.0.1366.768@62.0.1858.1080\" timestamp=\"1607083020504\" />\n    <state x=\"732\" y=\"441\" key=\"com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/63.0.1857.1080/1920.0.1366.768@63.0.1857.1080\" timestamp=\"1606915234233\" />\n    <state x=\"732\" y=\"441\" key=\"com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/64.0.1856.1080/1920.0.1366.768@64.0.1856.1080\" timestamp=\"1607091786602\" />\n    <state x=\"421\" y=\"95\" width=\"597\" height=\"735\" key=\"find.popup\" timestamp=\"1606147550386\">\n      <screen x=\"0\" y=\"25\" width=\"1440\" height=\"875\" />\n    </state>\n    <state x=\"421\" y=\"95\" width=\"597\" height=\"735\" key=\"find.popup/0.25.1440.875@0.25.1440.875\" timestamp=\"1606147550386\" />\n    <state x=\"355\" y=\"82\" key=\"new project wizard\" timestamp=\"1606146219888\">\n      <screen x=\"0\" y=\"25\" width=\"1440\" height=\"875\" />\n    </state>\n    <state x=\"355\" y=\"82\" key=\"new project wizard/0.25.1440.875@0.25.1440.875\" timestamp=\"1606146219888\" />\n  </component>\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\n    <expand />\n    <select />\n  </component>\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\n    <SUITE FILE_PATH=\"coverage/COM2008_3008__Project$Main.ic\" NAME=\"Main Coverage Results\" MODIFIED=\"1606423001068\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\n      <FILTER>Project_Code.*</FILTER>\n    </SUITE>\n    <SUITE FILE_PATH=\"coverage/COM2008_3008__Project$DBController.ic\" NAME=\"DBController Coverage Results\" MODIFIED=\"1606422376700\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\n      <FILTER>Project_Code.*</FILTER>\n    </SUITE>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/workspace.xml	(revision d7a5fbfeb9858d58967a0214ff277010e29683b8)
+++ .idea/workspace.xml	(date 1607094513896)
@@ -20,9 +20,14 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="c9fe5b6b-8c40-4624-9d20-5c2d54015260" name="Default Changelist" comment="updated file structure">
+      <change beforePath="$PROJECT_DIR$/.idea/uiDesigner.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/uiDesigner.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Project/src/Project_Code/DBController.java" beforeDir="false" afterPath="$PROJECT_DIR$/Project/src/Project_Code/DBController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Project/src/Project_Code/Admin/AddUser.java" beforeDir="false" afterPath="$PROJECT_DIR$/Project/src/Project_Code/Admin/AddUser.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Project/src/Project_Code/Registrar/RegistrarMain.java" beforeDir="false" afterPath="$PROJECT_DIR$/Project/src/Project_Code/Registrar/RegistrarMain.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/Project/src/Project_Code/Teacher/TeacherMain.java" beforeDir="false" afterPath="$PROJECT_DIR$/Project/src/Project_Code/Teacher/TeacherMain.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/Project/Project_Code/Admin/AddUser.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Project/Project_Code/Admin/AddUser.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/Project/Project_Code/Admin/AdminMain.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Project/Project_Code/Admin/AdminMain.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/Project/Project_Code/DBController.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Project/Project_Code/DBController.class" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -77,6 +82,17 @@
     </key>
   </component>
   <component name="RunManager" selected="Application.Main">
+    <configuration default="true" type="ArquillianJUnit" factoryName="" nameIsGenerated="true">
+      <option name="arquillianRunConfiguration">
+        <value>
+          <option name="containerStateName" value="" />
+        </value>
+      </option>
+      <option name="TEST_OBJECT" value="class" />
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
     <configuration name="DBController" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
       <option name="MAIN_CLASS_NAME" value="Project_Code.DBController" />
       <module name="Project" />
@@ -107,17 +123,6 @@
           <option name="ENABLED" value="true" />
         </pattern>
       </extension>
-      <method v="2">
-        <option name="Make" enabled="true" />
-      </method>
-    </configuration>
-    <configuration default="true" type="ArquillianJUnit" factoryName="" nameIsGenerated="true">
-      <option name="arquillianRunConfiguration">
-        <value>
-          <option name="containerStateName" value="" />
-        </value>
-      </option>
-      <option name="TEST_OBJECT" value="class" />
       <method v="2">
         <option name="Make" enabled="true" />
       </method>
@@ -315,51 +320,51 @@
       <screen x="0" y="25" width="1536" height="935" />
     </state>
     <state x="571" y="206" key="CreateSnapShotAction.MyDialog/0.25.1536.935@0.25.1536.935" timestamp="1606436760181" />
-    <state width="1719" height="118" key="GridCell.Tab.0.bottom" timestamp="1607091683797">
-      <screen x="64" y="0" width="1856" height="1080" />
+    <state width="1750" height="216" key="GridCell.Tab.0.bottom" timestamp="1607094414815">
+      <screen x="0" y="25" width="1792" height="1095" />
     </state>
     <state width="2518" height="261" key="GridCell.Tab.0.bottom/0.0.2560.1440/-2560.0.2560.1440@0.0.2560.1440" timestamp="1606338681435" />
     <state width="699" height="189" key="GridCell.Tab.0.bottom/0.25.1440.875@0.25.1440.875" timestamp="1606148231324" />
     <state width="747" height="144" key="GridCell.Tab.0.bottom/0.25.1536.935@0.0.1536.960" timestamp="1606423790374" />
     <state width="747" height="144" key="GridCell.Tab.0.bottom/0.25.1536.935@0.25.1536.935" timestamp="1606436743287" />
     <state width="875" height="176" key="GridCell.Tab.0.bottom/0.25.1792.1095@0.0.1792.1120" timestamp="1606582546823" />
-    <state width="875" height="176" key="GridCell.Tab.0.bottom/0.25.1792.1095@0.25.1792.1095" timestamp="1606658016568" />
+    <state width="1750" height="216" key="GridCell.Tab.0.bottom/0.25.1792.1095@0.25.1792.1095" timestamp="1607094414815" />
     <state width="1719" height="121" key="GridCell.Tab.0.bottom/62.0.1858.1080/1920.0.1366.768@62.0.1858.1080" timestamp="1607088956270" />
     <state width="1559" height="151" key="GridCell.Tab.0.bottom/63.0.1857.1080/1920.0.1366.768@63.0.1857.1080" timestamp="1606938224490" />
     <state width="1719" height="118" key="GridCell.Tab.0.bottom/64.0.1856.1080/1920.0.1366.768@64.0.1856.1080" timestamp="1607091683797" />
-    <state width="1719" height="118" key="GridCell.Tab.0.center" timestamp="1607091683797">
-      <screen x="64" y="0" width="1856" height="1080" />
+    <state width="1750" height="216" key="GridCell.Tab.0.center" timestamp="1607094414814">
+      <screen x="0" y="25" width="1792" height="1095" />
     </state>
     <state width="2518" height="261" key="GridCell.Tab.0.center/0.0.2560.1440/-2560.0.2560.1440@0.0.2560.1440" timestamp="1606338681433" />
     <state width="699" height="189" key="GridCell.Tab.0.center/0.25.1440.875@0.25.1440.875" timestamp="1606148231323" />
     <state width="747" height="144" key="GridCell.Tab.0.center/0.25.1536.935@0.0.1536.960" timestamp="1606423790372" />
     <state width="747" height="144" key="GridCell.Tab.0.center/0.25.1536.935@0.25.1536.935" timestamp="1606436743286" />
     <state width="875" height="176" key="GridCell.Tab.0.center/0.25.1792.1095@0.0.1792.1120" timestamp="1606582546822" />
-    <state width="875" height="176" key="GridCell.Tab.0.center/0.25.1792.1095@0.25.1792.1095" timestamp="1606658016567" />
+    <state width="1750" height="216" key="GridCell.Tab.0.center/0.25.1792.1095@0.25.1792.1095" timestamp="1607094414814" />
     <state width="1719" height="121" key="GridCell.Tab.0.center/62.0.1858.1080/1920.0.1366.768@62.0.1858.1080" timestamp="1607088956270" />
     <state width="1559" height="151" key="GridCell.Tab.0.center/63.0.1857.1080/1920.0.1366.768@63.0.1857.1080" timestamp="1606938224490" />
     <state width="1719" height="118" key="GridCell.Tab.0.center/64.0.1856.1080/1920.0.1366.768@64.0.1856.1080" timestamp="1607091683797" />
-    <state width="1719" height="118" key="GridCell.Tab.0.left" timestamp="1607091683797">
-      <screen x="64" y="0" width="1856" height="1080" />
+    <state width="1750" height="216" key="GridCell.Tab.0.left" timestamp="1607094414814">
+      <screen x="0" y="25" width="1792" height="1095" />
     </state>
     <state width="747" height="144" key="GridCell.Tab.0.left/0.0.1536.960@0.0.1536.960" timestamp="1606423790368" />
     <state width="875" height="176" key="GridCell.Tab.0.left/0.0.1792.1120@0.0.1792.1120" timestamp="1606582546815" />
     <state width="2518" height="261" key="GridCell.Tab.0.left/0.0.2560.1440/-2560.0.2560.1440@0.0.2560.1440" timestamp="1606338681432" />
     <state width="699" height="189" key="GridCell.Tab.0.left/0.25.1440.875@0.25.1440.875" timestamp="1606148231323" />
     <state width="747" height="144" key="GridCell.Tab.0.left/0.25.1536.935@0.25.1536.935" timestamp="1606436743286" />
-    <state width="875" height="176" key="GridCell.Tab.0.left/0.25.1792.1095@0.25.1792.1095" timestamp="1606658016567" />
+    <state width="1750" height="216" key="GridCell.Tab.0.left/0.25.1792.1095@0.25.1792.1095" timestamp="1607094414814" />
     <state width="1719" height="121" key="GridCell.Tab.0.left/62.0.1858.1080/1920.0.1366.768@62.0.1858.1080" timestamp="1607088956269" />
     <state width="1559" height="151" key="GridCell.Tab.0.left/63.0.1857.1080/1920.0.1366.768@63.0.1857.1080" timestamp="1606938224490" />
     <state width="1719" height="118" key="GridCell.Tab.0.left/64.0.1856.1080/1920.0.1366.768@64.0.1856.1080" timestamp="1607091683797" />
-    <state width="1719" height="118" key="GridCell.Tab.0.right" timestamp="1607091683797">
-      <screen x="64" y="0" width="1856" height="1080" />
+    <state width="1750" height="216" key="GridCell.Tab.0.right" timestamp="1607094414815">
+      <screen x="0" y="25" width="1792" height="1095" />
     </state>
     <state width="2518" height="261" key="GridCell.Tab.0.right/0.0.2560.1440/-2560.0.2560.1440@0.0.2560.1440" timestamp="1606338681434" />
     <state width="699" height="189" key="GridCell.Tab.0.right/0.25.1440.875@0.25.1440.875" timestamp="1606148231323" />
     <state width="747" height="144" key="GridCell.Tab.0.right/0.25.1536.935@0.0.1536.960" timestamp="1606423790374" />
     <state width="747" height="144" key="GridCell.Tab.0.right/0.25.1536.935@0.25.1536.935" timestamp="1606436743287" />
     <state width="875" height="176" key="GridCell.Tab.0.right/0.25.1792.1095@0.0.1792.1120" timestamp="1606582546822" />
-    <state width="875" height="176" key="GridCell.Tab.0.right/0.25.1792.1095@0.25.1792.1095" timestamp="1606658016567" />
+    <state width="1750" height="216" key="GridCell.Tab.0.right/0.25.1792.1095@0.25.1792.1095" timestamp="1607094414815" />
     <state width="1719" height="121" key="GridCell.Tab.0.right/62.0.1858.1080/1920.0.1366.768@62.0.1858.1080" timestamp="1607088956270" />
     <state width="1559" height="151" key="GridCell.Tab.0.right/63.0.1857.1080/1920.0.1366.768@63.0.1857.1080" timestamp="1606938224490" />
     <state width="1719" height="118" key="GridCell.Tab.0.right/64.0.1856.1080/1920.0.1366.768@64.0.1856.1080" timestamp="1607091683797" />
@@ -417,13 +422,14 @@
       <screen x="64" y="0" width="1856" height="1080" />
     </state>
     <state x="207" y="224" width="1579" height="742" key="com.intellij.history.integration.ui.views.FileHistoryDialog/64.0.1856.1080/1920.0.1366.768@64.0.1856.1080" timestamp="1607091839347" />
-    <state x="732" y="441" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2" timestamp="1607091786602">
-      <screen x="64" y="0" width="1856" height="1080" />
+    <state x="645" y="472" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2" timestamp="1607093245238">
+      <screen x="0" y="25" width="1792" height="1095" />
     </state>
     <state x="518" y="368" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/0.0.1440.900@0.0.1440.900" timestamp="1606135644550" />
     <state x="921" y="589" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/0.0.2560.1440/-2560.0.2560.1440@0.0.2560.1440" timestamp="1606336460927" />
     <state x="518" y="382" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/0.23.1440.877@0.23.1440.877" timestamp="1606135106799" />
     <state x="553" y="407" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/0.25.1536.935@0.25.1536.935" timestamp="1606435341695" />
+    <state x="645" y="472" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/0.25.1792.1095@0.25.1792.1095" timestamp="1607093245238" />
     <state x="731" y="441" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/62.0.1858.1080/1920.0.1366.768@62.0.1858.1080" timestamp="1607083020504" />
     <state x="732" y="441" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/63.0.1857.1080/1920.0.1366.768@63.0.1857.1080" timestamp="1606915234233" />
     <state x="732" y="441" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/64.0.1856.1080/1920.0.1366.768@64.0.1856.1080" timestamp="1607091786602" />
@@ -441,10 +447,10 @@
     <select />
   </component>
   <component name="com.intellij.coverage.CoverageDataManagerImpl">
-    <SUITE FILE_PATH="coverage/COM2008_3008__Project$Main.ic" NAME="Main Coverage Results" MODIFIED="1606423001068" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false">
+    <SUITE FILE_PATH="coverage/COM2008_3008__Project$DBController.ic" NAME="DBController Coverage Results" MODIFIED="1606952916871" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false">
       <FILTER>Project_Code.*</FILTER>
     </SUITE>
-    <SUITE FILE_PATH="coverage/COM2008_3008__Project$DBController.ic" NAME="DBController Coverage Results" MODIFIED="1606422376700" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false">
+    <SUITE FILE_PATH="coverage/COM2008_3008__Project$Main.ic" NAME="Main Coverage Results" MODIFIED="1607094414783" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false">
       <FILTER>Project_Code.*</FILTER>
     </SUITE>
   </component>
Index: Project/src/Project_Code/Registrar/RegistrarMain.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Project_Code.Registrar;\n\nimport Project_Code.DBController;\nimport Project_Code.User;\n\nimport javax.swing.*;\nimport javax.swing.table.DefaultTableModel;\nimport java.security.SecureRandom;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.ArrayList;\nimport java.util.ListIterator;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\n\npublic class RegistrarMain extends User {\n    private DBController con = super.getDataAccessController();\n    private int currentCredits = 0;\n\n    /**\n     * Sets username as registrar for the Registrars\n     *\n     * @param username username of registrar\n     */\n    public RegistrarMain(String username) {\n\n        super(username, \"registrar\");\n    }\n\n    public boolean addNewStudent(String title, String surname, String forename,\n                                 String level, String degreeCode, String tutor, String startDate, String endDate, String password) throws SQLException {\n\n        // create student username\n        int counter=0;\n        do {\n            counter++;\n            username= (forename.charAt(0)+surname+ counter).toLowerCase();\n        } while (checkUsernameExists(username));\n\n        // create an email for the student\n        String email=username+\"@sheffield.ac.uk\";\n\n        //period label\n        String periodLabel=\"A\";\n\n        if (!(checkDates(startDate,endDate))){\n            return false;\n        }\n\n        //convert the dates given in mysql format DATE (yyyymmdd)\n        startDate=startDate.substring(6, 10)+startDate.substring(3,5)+startDate.substring(0,2);\n        endDate=endDate.substring(6, 10)+endDate.substring(3,5)+endDate.substring(0,2);\n\n        int changes;\n        //insert to UserAccounts\n        changes = con.performUpdate(\"INSERT INTO UserAccounts (username, password)\"\n                + \" VALUES ('\"+username+\"','\"+password+\"')\");\n\n        //insert to Users Table\n        changes+=con.performUpdate(\"INSERT INTO Users (username,role,forename,surname, title, email)\"\n                + \" VALUES ('\"+username+\"','student','\"+forename+\"','\"+surname+\"','\"+title+\"','\"+email+\"')\");\n\n        //insert to Students Table\n        changes+=con.performUpdate(\"INSERT INTO Student (username,degreeCode,tutor)\"\n                + \" VALUES ('\"+username+\"','\"+degreeCode+\"','\"+tutor+\"')\");\n\n        int regNum = getRegNum(username);\n\n        //insert student into period table\n        changes+=con.performUpdate(\"INSERT INTO Period (periodLabel,registrationNo,levelCode,startDate,endDate)\"\n                + \" VALUES ('\"+periodLabel+\"','\"+regNum+\"','\"+level+\"','\"+startDate+\"','\"+endDate+\"')\");\n\n\n        if (changes>0)\n            JOptionPane.showMessageDialog(null,\"New student has been registered with registration number:\"+ regNum + \" and email:\"+ email);\n        con.closeConnection();\n        con.closeStatement();\n\n        //add all the Required modules to the StudyGrade table\n        addRequiredModules(regNum,degreeCode, level, periodLabel);\n\n        return  changes>0;\n    }\n\n\n    public int getRegNum(String username) throws SQLException {\n        ResultSet result;\n        int res = 0;\n        result = con.performQuery(\"SELECT registrationNo FROM Student WHERE username ='\"+username+\"'\");\n        while (result.next()) {\n             res=Integer.parseInt(result.getString(1));\n        }\n\n        con.closeConnection();\n        con.closeStatement();\n        return (res);\n    }\n\n\n    public boolean checkUsernameExists(String user) throws SQLException {\n        ResultSet result;\n        int count=0;\n        result = con.performQuery(\"SELECT EXISTS(SELECT 1 FROM UserAccounts WHERE username = '\" +\n                user + \"' COLLATE latin1_bin)\"); //collate is used for case sensitivity\n\n        while (result.next()) {\n            count=Integer.parseInt(result.getString(1));\n        }\n        con.closeConnection();\n        con.closeStatement();\n        return (count!=0);\n\n    }\n\n\n    public void addRequiredModules(int regNum,String degreeCode, String levelCode, String periodLabel) throws NumberFormatException, SQLException{\n        ResultSet result;\n        if (levelCode.equals(\"P\")) {\n            return; //doesn't add for a placement student so it escapes the method\n        }\n        //create an arraylist of all the required modules\n        ArrayList<String> oblModules = new ArrayList<>();\n        result = con.performQuery(\"SELECT moduleCode FROM ModuleApproval WHERE degreeCode='\"+degreeCode+\"' \"\n                + \"AND levelCode='\"+levelCode+\"' AND core=1 \");\n        while (result.next()) {\n            oblModules.add(result.getString(1)); //add each required module to the arraylist\n        }\n        //close connection and statement\n        con.closeConnection();\n        con.closeStatement();\n        //insert each required module to the database\n\n        String query = (\"INSERT INTO Study (registrationNo,moduleCode,periodLabel)\");\n        // iterate over required modules in memory and\n        // insert these into the database\n        ListIterator<String> modules = oblModules.listIterator();\n        while(modules.hasNext()) {\n            con.performUpdate(query+\"VALUES ('\"+regNum+\"','\"+modules.next()+\"','\"+periodLabel+\"')\");\n        }\n        //close connection and statement\n        con.closeConnection();\n        con.closeStatement();\n    }\n\n    /**\n     * Removes student from the database\n     *\n     */\n    public boolean removeStudent(String regNum) throws NumberFormatException, SQLException{\n        ResultSet result;\n        //checks whether the registration number is blank\n        if (regNum.equals(\"\")) {\n            JOptionPane.showMessageDialog(null,\"Select the registration number of the student you wish to remove.\");\n            return false;\n        }\n\n        //gets the username using the registration number\n        String username=\"\";\n        System.out.println(regNum);\n\n        int changes;\n        result=con.performQuery(\"SELECT * FROM Student WHERE registrationNo= '\"+Integer.valueOf(regNum)+\"' \");\n        while (result.next()) {\n            username=result.getString(3);\n        }\n        //delete from database\n\n        changes=con.performUpdate(\"DELETE FROM Study WHERE registrationNo= '\"+Integer.valueOf(regNum)+\"' \");\n        con.closeConnection();\n        con.closeStatement();\n\n        //delete from Period\n        changes+=con.performUpdate(\"DELETE FROM Period WHERE registrationNo= '\"+Integer.valueOf(regNum)+\"' \");\n        //close connection and statement\n        con.closeConnection();\n        con.closeStatement();\n\n        //delete from Students\n        changes+=con.performUpdate(\"DELETE FROM Student WHERE registrationNo= '\"+Integer.valueOf(regNum)+\"' \");\n        //close connection and statement\n        con.closeConnection();\n        con.closeStatement();\n\n        //delete from StudyGrades\n        changes+=con.performUpdate(\"DELETE FROM Study WHERE registrationNo= '\"+Integer.valueOf(regNum)+\"' \");\n        //close connection and statement\n        con.closeConnection();\n        con.closeStatement();\n\n        changes+=con.performUpdate(\"DELETE FROM Users WHERE username= '\"+username+\"' \");\n        //close connection and statement\n        con.closeConnection();\n        con.closeStatement();\n\n        changes+=con.performUpdate(\"DELETE FROM UserSalts WHERE username= '\"+username+\"' \");\n        //close connection and statement\n        con.closeConnection();\n        con.closeStatement();\n\n        changes+=con.performUpdate(\"DELETE FROM UserAccounts WHERE username= '\"+username+\"' \");\n        //close connection and statement\n        con.closeConnection();\n        con.closeStatement();\n        return changes>0;\n    }\n\n    public DefaultTableModel findStudentRecord(String regNum, String periodLabel, String levelCode, String degreeCode) throws SQLException {\n        ResultSet result;\n        //create columns of the table\n        DefaultTableModel table=new DefaultTableModel(new Object[][] {},new String[] {\n                \"Module Code\", \"Core\", \"Credits\"});\n\n        Object [] recordModules=new Object[3];\n\n        //store the student's current credits\n        currentCredits=0;\n        //find the student's record\n        result=con.performQuery(\"SELECT DISTINCT t1.moduleCode,t3.core,t2.credits FROM Study t1 JOIN Module t2 ON t1.moduleCode=t2.moduleCode\"\n                + \" JOIN ModuleApproval t3 ON t2.moduleCode=t3.moduleCode WHERE t1.registrationNo='\"+Integer.parseInt(regNum)+\"' AND t1.periodLabel='\"+periodLabel+\"' \"\n                + \"AND t3.levelCode='\"+levelCode+\"' AND t3.degreeCode ='\"+degreeCode+\"' \");\n        while (result.next()) {\n            recordModules[0] = result.getString(1);//modulecode\n            recordModules[1] = result.getString(2);//core modules\n            recordModules[2] = result.getString(3);//credits\n            currentCredits+=Integer.parseInt(result.getString(3));\n            table.addRow(recordModules);\n        }\n\n        //close connection and statement\n        con.closeConnection();\n        con.closeStatement();\n\n        return table;\n    }\n\n    public DefaultTableModel viewAllStudents () throws SQLException{\n        ResultSet result;\n        //initialise the columns of the table\n        DefaultTableModel table=new DefaultTableModel(new Object[][] {},new String[] {\n                \"Registration Number\", \"Degree Code\", \"username\", \"E-mail\", \"Title\", \"Surname\", \"Forename\", \"Tutor\"});\n\n        //get the data from the database and add it to the table model\n        Object [] regStudents = new Object[8];\n        result = con.performQuery(\"SELECT Student.registrationNo, Student.degreeCode, Users.username, Users.email, Users.title, Users.surname, Users.forename, Student.tutor FROM Student INNER JOIN Users ON Student.username=Users.username;\");\n        while (result.next()) {\n            regStudents[0] = result.getString(1);//registration number\n            regStudents[1] = result.getString(2);//degreeCode\n            regStudents[2] = result.getString(3);//username\n            regStudents[3] = result.getString(4);//email\n            regStudents[4] = result.getString(5);//title\n            regStudents[5] = result.getString(6);//surname\n            regStudents[6] = result.getString(7);//forename\n            regStudents[7] = result.getString(8);//tutor\n            table.addRow(regStudents); //add each row to the table model\n        }\n        //close connection and statement\n        con.closeConnection();\n        con.closeStatement();\n\n        return table;\n\n    }\n\n    public DefaultTableModel viewCurrentPeriodStatus () throws NumberFormatException, SQLException{\n        ResultSet result;\n\n        //create the table model columns\n        DefaultTableModel defaultTable=new DefaultTableModel(new Object[][] {},new String[] {\n                \"Registration No.\", \"DegreeCode\", \"Modules\",\"Period Label\",\"Current Total Credits\", \"Required Credits\"});\n\n        Object [] currentStatus = new Object[6];\n\n        //find the modules from the database\n        result=con.performQuery(\"SELECT t1.registrationNo, t1.degreeCode, group_concat(t2.moduleCode), t2.periodLabel, SUM(t3.credits) FROM \" +\n                \"Student t1 JOIN Study t2 ON t1.registrationNo = t2.registrationNo JOIN Module t3 ON t2.moduleCode = t3.moduleCode \" +\n                \"WHERE t2.periodLabel= (SELECT MAX(periodLabel) FROM Study WHERE registrationNo = t1.registrationNo) GROUP BY registrationNo\");\n        while (result.next()) {\n            currentStatus[0] = result.getString(1);//Registration No\n            currentStatus[1] = result.getString(2);//degreecode\n            currentStatus[2] = result.getString(3);//modulecode\n            currentStatus[3] = result.getString(4);//periodlabel\n            currentStatus[4] = result.getString(5);//credits\n            if (result.getString(2).charAt(3) == 'P')\n                currentStatus[5] = 180;\n            else\n                currentStatus[5] = 120;\n            defaultTable.addRow(currentStatus);\n        }\n        con.closeConnection();\n        con.closeStatement();\n\n\n        return defaultTable;\n\n    }\n\n    public boolean addOptionalModule(String regNum,String moduleCode, String periodLabel, int totalCredits) throws SQLException {\n        ResultSet result;\n        //check if there are blanks\n        if (regNum.equals(\"\") || moduleCode.equals(\"\")) {\n            JOptionPane.showMessageDialog(null,\"Please select a module to add\");\n            return false;\n        }\n\n        int credits=0;\n        result=con.performQuery(\"SELECT credits FROM Module WHERE moduleCode= '\"+moduleCode+\"' \");\n        while (result.next()) {\n            credits=result.getInt(1);\n        }\n\n        //close connection and statement\n        con.closeConnection();\n        con.closeStatement();\n\n        //check whether the current credits are not more than the total credits\n        if ((getCurrentCredits()+credits)>totalCredits) {\n            JOptionPane.showMessageDialog(null,\"Current credits are more than the total credits. Please choose a different module to add\");\n            return false;\n        }\n\n        //insert into the database the optional module\n        int changes;\n        changes=con.performUpdate(\"INSERT INTO Study (registrationNo,moduleCode,periodLabel)\"\n                + \" VALUES ('\"+regNum+\"','\"+moduleCode+\"','\"+periodLabel+\"' )\");\n        //close connection and statement\n        con.closeConnection();\n        con.closeStatement();\n        return changes>0;\n    }\n    public boolean dropOptionalModule(String regNum,String moduleCode,String periodLabel) throws SQLException {\n        //check if there are blanks\n        if (regNum.equals(\"\") || moduleCode.equals(\"\")) {\n            JOptionPane.showMessageDialog(null,\"Please select a module to drop\");\n            return false;\n        }\n\n        //delete from the database the optional module\n        int changes;\n        changes=con.performUpdate(\"DELETE FROM Study WHERE registrationNo= '\"+Integer.valueOf(regNum)+\"' \"\n                + \"AND moduleCode= '\"+moduleCode+\"' AND periodLabel='\"+periodLabel+\"' \");\n\n        con.closeConnection();\n        con.closeStatement();\n        return changes>0;\n    }\n\n    public DefaultTableModel viewModules(String degreeCode, String levelCode, int core) throws NumberFormatException, SQLException{\n        ResultSet result;\n\n        //if core is 0 then the module is optional\n        String moduleType;\n        if (core==0) {\n            moduleType=\"Optional Module\";\n        }\n        //if core is 1 then the module is required\n        else {\n            moduleType=\"Required Module\";\n        }\n\n        //create the table model columns\n        DefaultTableModel defaultTable=new DefaultTableModel(new Object[][] {},new String[] {\n                moduleType, \"Credits\"});\n\n        Object [] modules = new Object[2];\n\n        //find the modules from the database\n        result=con.performQuery(\"SELECT t1.moduleCode,t2.credits FROM ModuleApproval t1 INNER JOIN Module t2 ON t1.moduleCode = t2.moduleCode\"\n                + \" WHERE t1.degreeCode='\"+degreeCode+\"' AND t1.levelCode='\"+levelCode+\"' AND t1.core='\"+core+\"' \");\n        while (result.next()) {\n            modules[0] = result.getString(1);//moduleCode\n            modules[1] = result.getString(2);//credits\n            defaultTable.addRow(modules);\n        }\n        //close connection and statement\n        con.closeConnection();\n        con.closeStatement();\n\n\n        return defaultTable;\n\n    }\n\n    public int getCurrentCredits() {\n        return currentCredits;\n    }\n\n    public int numberOfFailures(String regNum) throws SQLException {\n        ResultSet result;\n        int failures = 0;\n        result = con.performQuery(\"SELECT COUNT(*) FROM Period WHERE registrationNO = '\"+regNum+\"' AND outcome = '\"+\"fail\"+\"' \");\n        while (result.next()){\n            failures = result.getInt(1);\n        }\n        //close connection and statement\n        con.closeConnection();\n        con.closeStatement();\n        return failures;\n    }\n\n    public boolean checkLevelExists(String degreeCode,String levelCode) throws SQLException {\n        ResultSet result;\n        int count=0;\n        result = con.performQuery(\"SELECT EXISTS(SELECT 1 FROM ModuleApproval WHERE degreeCode = '\" +\n                degreeCode + \"' AND levelCode = '\"+levelCode+\"' COLLATE latin1_bin)\");\n        while (result.next()) {\n            count=Integer.parseInt(result.getString(1));\n        }\n        //close connection and statement\n        con.closeConnection();\n        con.closeStatement();\n        return (count!=0);\n    }\n\n\n    public int findDegreePeriod(String degreeCode) throws SQLException {\n        if (checkLevelExists(degreeCode,\"4\")) {\n            return 4;\n        }\n        else if(checkLevelExists(degreeCode,\"3\")) {\n            return 3;\n        }\n        else if(checkLevelExists(degreeCode,\"2\")) {\n            return 2;\n        }\n        else{\n            return 1;\n        }\n    }\n    public boolean checkDates(String start, String end) {\n        //check for correct format using regular expression\n        String regex = \"^(3[01]|[12][0-9]|0[1-9])/(1[0-2]|0[1-9])/[0-9]{4}$\";\n        Pattern pattern = Pattern.compile(regex);\n\n        Matcher startMatch=pattern.matcher(start);\n        Matcher endMatch=pattern.matcher(end);\n\n        if ( !startMatch.find() || !endMatch.find() ) {\n            JOptionPane.showMessageDialog(null,\"Please check the format of your dates\");\n            return false;\n        }\n\n        //check whether dates make sense\n        int startY=Integer.parseInt(start.replaceAll(\"/\", \"\").substring(4, 8));//start Year\n        int startM=Integer.parseInt(start.replaceAll(\"/\", \"\").substring(2, 4));//start Month\n        int startD=Integer.parseInt(start.replaceAll(\"/\", \"\").substring(0, 2));//start Day\n\n        int endY=Integer.parseInt(end.replaceAll(\"/\", \"\").substring(4, 8));//end Year\n        int endM=Integer.parseInt(end.replaceAll(\"/\", \"\").substring(2, 4));//end Month\n        int endD=Integer.parseInt(end.replaceAll(\"/\", \"\").substring(0, 2));//end Day\n\n        //check the year difference only\n        if (!(endY-startY==1)) {\n            JOptionPane.showMessageDialog(null, \"The registered period of study should have a year difference of 1\");\n            return false;\n        }\n\n        if (startY<2020) {\n            JOptionPane.showMessageDialog(null,\"The start date should be after the current date\");\n            return false;\n        }\n\n        //check the that the starting date is indeed earlier than the end date\n        if (startY > endY ){\n            JOptionPane.showMessageDialog(null,\"The end date is earlier than the start date\");\n            return false;\n        }\n        //check the period difference including the months and days\n        else if (12 - startM + endM < 6 || 12 - startM + endM == 6 && endD < startD){\n            JOptionPane.showMessageDialog(null,\"The dates should have at least six months difference\");\n            return false;\n        }\n        return true;\n    }\n\n    public static String generateRandomPassword() {\n        // ASCII range - alphanumeric (0-9, a-z, A-Z)\n        final String chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n        SecureRandom random = new SecureRandom();\n        StringBuilder pword = new StringBuilder();\n\n\n        for (int i = 0; i < 10; i++) {\n            int randomIndex = random.nextInt(chars.length());\n            pword.append(chars.charAt(randomIndex));\n        }\n        return pword.toString();\n    }\n\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Project/src/Project_Code/Registrar/RegistrarMain.java	(revision d7a5fbfeb9858d58967a0214ff277010e29683b8)
+++ Project/src/Project_Code/Registrar/RegistrarMain.java	(date 1607093063144)
@@ -132,7 +132,6 @@
 
         String query = ("INSERT INTO Study (registrationNo,moduleCode,periodLabel)");
         // iterate over required modules in memory and
-        // insert these into the database
         ListIterator<String> modules = oblModules.listIterator();
         while(modules.hasNext()) {
             con.performUpdate(query+"VALUES ('"+regNum+"','"+modules.next()+"','"+periodLabel+"')");
Index: Project/src/Project_Code/Teacher/TeacherMain.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Project_Code.Teacher;\n\nimport Project_Code.*;\n\nimport javax.swing.*;\nimport java.util.*;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\n\n/**\n * TeacherMain inherits user\n * Implements all actions carried out by Teacher role\n */\npublic class TeacherMain extends User {\n\n\n    private DBController dac = super.getDataAccessController();\n\n    public TeacherMain(String username) {\n        super(username, \"Teacher\");\n    }\n    /**\n     * searchByStudent\n     * @return true if a single student is found, false otherwise\n     */\n    public boolean searchByStudent (String value, boolean username){\n        ResultSet result = null;\n        try {\n            String query = \"\";\n            if (username){\n                query = \"SELECT COUNT(*) FROM Student WHERE username=?\";\n            }\n            else{\n                query = \"SELECT COUNT(*) FROM Student WHERE registrationNo=?\";\n            }\n            PreparedStatement pstmt = dac.getPreparedStatement(query);\n            pstmt.setString(1, value);\n            result = dac.performPreparedStatement(pstmt);\n            int n = 0;\n            while (result.next()) {\n                n = result.getInt(1);\n            }\n            if (n > 1){\n                // Multiple results\n                JOptionPane.showMessageDialog(null,\"An error has occurred, please contact the admin\",\n                        \"ERROR\", JOptionPane.ERROR_MESSAGE, null);\n                return false;\n            }\n            else if (n == 1){\n                // 1 Result\n                return true;\n            }\n            else {\n                // No results\n                JOptionPane.showMessageDialog(null,\"No results found\",\n                        \"ERROR\", JOptionPane.ERROR_MESSAGE, null);\n                return false;\n            }\n        }\n        catch(SQLException ex) {\n            //display error message and leave the application\n            JOptionPane.showMessageDialog(null,\"There was an error when processing the data.\",\n                    \"ERROR\", JOptionPane.ERROR_MESSAGE, null);\n            System.exit(0);\n        }\n\n        return false;\n    }\n    /**\n     * getRegNoFromUsername\n     * @return registration number of a student, given their username\n     */\n    public String getRegNoFromUsername(String username){\n        //Method assumes there is only one match\n        ResultSet result = null;\n        try {\n            PreparedStatement pstmt = dac.getPreparedStatement(\"SELECT * FROM Student WHERE username=?\");\n            pstmt.setString(1, username);\n            result = dac.performPreparedStatement(pstmt);\n            while (result.next()) {\n                return result.getString(\"registrationNo\");\n            }\n        }\n        catch(SQLException ex) {\n            //display error message and leave the application\n            JOptionPane.showMessageDialog(null,\"There was an error when processing the data.\",\n                    \"ERROR\", JOptionPane.ERROR_MESSAGE, null);\n            System.exit(0);\n        }\n        return null;\n    }\n    public String[] getStudentDetails(String regNo){\n        //Method assumes there is only one match\n        ResultSet result = null;\n        String[] results = new String[2];\n        try {\n            PreparedStatement pstmt = dac.getPreparedStatement(\"SELECT * FROM Student WHERE registrationNo=?\");\n            pstmt.setString(1, regNo);\n            result = dac.performPreparedStatement(pstmt);\n            while (result.next()) {\n                results[0] =  result.getString(\"username\");\n                results[1] =  result.getString(\"degreeCode\");\n            }\n            return results;\n        }\n        catch(SQLException ex) {\n            //display error message and leave the application\n            JOptionPane.showMessageDialog(null,\"There was an error when processing the data.\",\n                    \"ERROR\", JOptionPane.ERROR_MESSAGE, null);\n            System.exit(0);\n        }\n        return null;\n    }\n    public String[] getUserDetails(String username){\n        //Method assumes there is only one match\n        ResultSet result = null;\n        String[] results = new String[2];\n        try {\n            PreparedStatement pstmt = dac.getPreparedStatement(\"SELECT * FROM Users WHERE username=?\");\n            pstmt.setString(1, username);\n            result = dac.performPreparedStatement(pstmt);\n            while (result.next()) {\n                results[0] =  result.getString(\"forename\");\n                results[1] =  result.getString(\"surname\");\n            }\n            return results;\n        }\n        catch(SQLException ex) {\n            //display error message and leave the application\n            JOptionPane.showMessageDialog(null,\"There was an error when processing the data.\",\n                    \"ERROR\", JOptionPane.ERROR_MESSAGE, null);\n            System.exit(0);\n        }\n        return null;\n    }\n    public String getUsername(String regNo){\n        //Method assumes there is only one match\n        ResultSet result = null;\n        try {\n            PreparedStatement pstmt = dac.getPreparedStatement(\"SELECT * FROM Student WHERE registrationNo=?\");\n            pstmt.setString(1, regNo);\n            result = dac.performPreparedStatement(pstmt);\n            while (result.next()) {\n                return result.getString(\"username\");\n            }\n        }\n        catch(SQLException ex) {\n            //display error message and leave the application\n            JOptionPane.showMessageDialog(null,\"There was an error when processing the data.\",\n                    \"ERROR\", JOptionPane.ERROR_MESSAGE, null);\n            System.exit(0);\n        }\n        return null;\n    }\n    public String getDegreeCode(String regNo){\n        //Method assumes there is only one match\n        ResultSet result = null;\n        try {\n            PreparedStatement pstmt = dac.getPreparedStatement(\"SELECT * FROM Student WHERE registrationNo=?\");\n            pstmt.setString(1, regNo);\n            result = dac.performPreparedStatement(pstmt);\n            while (result.next()) {\n                return result.getString(\"degreeCode\");\n            }\n        }\n        catch(SQLException ex) {\n            //display error message and leave the application\n            JOptionPane.showMessageDialog(null,\"There was an error when processing the data.\",\n                    \"ERROR\", JOptionPane.ERROR_MESSAGE, null);\n            System.exit(0);\n        }\n        return null;\n    }\n    public String getFirstName(String regNo){\n        //Method assumes there is only one match\n        ResultSet result = null;\n        try {\n            PreparedStatement pstmt = dac.getPreparedStatement(\"SELECT * FROM Users WHERE username=?\");\n            pstmt.setString(1, getUsername(regNo));\n            result = dac.performPreparedStatement(pstmt);\n            while (result.next()) {\n                return result.getString(\"forename\");\n            }\n        }\n        catch(SQLException ex) {\n            //display error message and leave the application\n            JOptionPane.showMessageDialog(null,\"There was an error when processing the data.\",\n                    \"ERROR\", JOptionPane.ERROR_MESSAGE, null);\n            System.exit(0);\n        }\n        return null;\n    }\n    public String getLastName(String regNo){\n        //Method assumes there is only one match\n        ResultSet result = null;\n        try {\n            PreparedStatement pstmt = dac.getPreparedStatement(\"SELECT * FROM Users WHERE username=?\");\n            pstmt.setString(1, getUsername(regNo));\n            result = dac.performPreparedStatement(pstmt);\n            while (result.next()) {\n                return result.getString(\"surname\");\n            }\n        }\n        catch(SQLException ex) {\n            //display error message and leave the application\n            JOptionPane.showMessageDialog(null,\"There was an error when processing the data.\",\n                    \"ERROR\", JOptionPane.ERROR_MESSAGE, null);\n            System.exit(0);\n        }\n        return null;\n    }\n    public String getLevel(String regNo, String periodLabel){\n        //Method assumes there is only one match\n        ResultSet result = null;\n        try {\n            PreparedStatement pstmt = dac.getPreparedStatement(\"SELECT * FROM Period WHERE registrationNo=? AND periodLabel=?\");\n            pstmt.setString(1, regNo);\n            pstmt.setString(2, periodLabel);\n            result = dac.performPreparedStatement(pstmt);\n            while (result.next()) {\n                return result.getString(\"levelCode\");\n            }\n        }\n        catch(SQLException ex) {\n            //display error message and leave the application\n            JOptionPane.showMessageDialog(null,\"There was an error when processing the data.\",\n                    \"ERROR\", JOptionPane.ERROR_MESSAGE, null);\n            System.exit(0);\n        }\n        return null;\n    }\n    public List<String> getStudentPeriods(String regNo){\n        //Method assumes there is only one match\n        ResultSet result = null;\n        List<String> periodList = new ArrayList<>();\n        try {\n            PreparedStatement pstmt = dac.getPreparedStatement(\"SELECT * FROM Period WHERE registrationNo=?\");\n            pstmt.setString(1, regNo);\n            result = dac.performPreparedStatement(pstmt);\n            while (result.next()) {\n                periodList.add(result.getString(\"periodLabel\"));\n            }\n            return periodList;\n        }\n        catch(SQLException ex) {\n            //display error message and leave the application\n            JOptionPane.showMessageDialog(null,\"There was an error when processing the data.\",\n                    \"ERROR\", JOptionPane.ERROR_MESSAGE, null);\n            System.exit(0);\n        }\n        return null;\n    }\n    public List<String> getStudentModules(String regNo, String periodLabel){\n        //Method assumes there is only one match\n        ResultSet result = null;\n        List<String> moduleList = new ArrayList<>();\n        try {\n            PreparedStatement pstmt = dac.getPreparedStatement(\"SELECT * FROM Study WHERE registrationNo=? AND periodLabel=?\");\n            pstmt.setString(1, regNo);\n            pstmt.setString(2, periodLabel);\n            result = dac.performPreparedStatement(pstmt);\n            while (result.next()) {\n                moduleList.add(result.getString(\"moduleCode\"));\n            }\n            return moduleList;\n        }\n        catch(SQLException ex) {\n            //display error message and leave the application\n            JOptionPane.showMessageDialog(null,\"There was an error when processing the data.\",\n                    \"ERROR\", JOptionPane.ERROR_MESSAGE, null);\n            System.exit(0);\n        }\n        return null;\n    }\n    public String[] getGrades(String regNo, String moduleCode, String periodLabel){\n        //Method assumes there is only one match\n        ResultSet result = null;\n        String[] results = new String[2];\n        try {\n            PreparedStatement pstmt = dac.getPreparedStatement(\"SELECT * FROM Study WHERE registrationNo=? AND moduleCode=? AND periodLabel=?\");\n            pstmt.setString(1, regNo);\n            pstmt.setString(2, moduleCode);\n            pstmt.setString(3, periodLabel);\n            result = dac.performPreparedStatement(pstmt);\n            while (result.next()) {\n                results[0] =  result.getString(\"initialGrade\");\n                results[1] =  result.getString(\"resitGrade\");\n            }\n            return results;\n        }\n        catch(SQLException ex) {\n            //display error message and leave the application\n            JOptionPane.showMessageDialog(null,\"There was an error when processing the data.\",\n                    \"ERROR\", JOptionPane.ERROR_MESSAGE, null);\n            System.exit(0);\n        }\n        return null;\n    }\n    public void updateGrades(String regNo, String moduleCode, String periodLabel, String initGrade, String resitGrade){\n        //Method assumes there is only one match\n        try {\n            PreparedStatement pstmt = dac.getPreparedStatement(\"UPDATE Study SET initialGrade=?, resitGrade=? WHERE registrationNo=? AND moduleCode=? AND periodLabel=?\");\n            pstmt.setString(1, initGrade);\n            pstmt.setString(2, resitGrade);\n            pstmt.setString(3, regNo);\n            pstmt.setString(4, moduleCode);\n            pstmt.setString(5, periodLabel);\n            dac.performPreparedUpdate(pstmt);\n        }\n        catch(SQLException ex) {\n            //display error message and leave the application\n            JOptionPane.showMessageDialog(null,\"There was an error when processing the data.\",\n                    \"ERROR\", JOptionPane.ERROR_MESSAGE, null);\n            System.exit(0);\n        }\n    }\n    public Double getMeanGrade(String regNo, String periodLabel){\n        //Method assumes there is only one match\n        ResultSet result = null;\n        List<String> initGrades = new ArrayList<>();\n        List<String> resitGrades = new ArrayList<>();\n        try {\n            PreparedStatement pstmt = dac.getPreparedStatement(\"SELECT * FROM Study WHERE registrationNo=? AND periodLabel=?\");\n            pstmt.setString(1, regNo);\n            pstmt.setString(2, periodLabel);\n            result = dac.performPreparedStatement(pstmt);\n            while (result.next()) {\n                initGrades.add(result.getString(\"initialGrade\"));\n                resitGrades.add(result.getString(\"resitGrade\"));\n            };\n            Double initSum = 0.0;\n            Double meanGrade;\n            int count = 0;\n            for (String i:initGrades){\n                if (resitGrades.get(count) != null){\n                    if(Double.parseDouble(resitGrades.get(count)) >= 39.5){\n                        initSum+=40;\n                    }\n                }\n                else{\n                    if (i != null){\n                        initSum += Double.parseDouble(i);\n                    }\n                    else{\n                        return null;\n                    }\n                }\n                count++;\n            }\n            meanGrade = initSum / initGrades.toArray().length;\n            return round(meanGrade, 1);\n        }\n        catch(SQLException ex) {\n            //display error message and leave the application\n            JOptionPane.showMessageDialog(null,\"There was an error when processing the data.\",\n                    \"ERROR\", JOptionPane.ERROR_MESSAGE, null);\n            System.exit(0);\n        }\n        return null;\n    }\n    public String getOutcome(String regNo,String periodLabel,String levelCode,String degreeCode,double meanGrade) {\n        //check if it is 1-year MSc\n        if (degreeCode.substring(3,4).equals(\"P\")) {\n            //check if student failed dissertation but succeeded in all the other modules\n            double disertationGrade=0;\n            int studentTotalCredits=0;\n            //for (Map.Entry<String, Double> entry : recModules.entrySet()) {\n            //    int credit=moduleCredits.get(entry.getKey());\n            //    if (credit==60) {\n            //        //get the grade for the dissertation module\n            //        disertationGrade=entry.getValue();\n            //    }\n            //   if (entry.getValue()>50) {\n            //        studentTotalCredits+=credit;\n            //    }\n            //}\n            //Special rule if student passes modules but fails dissertaion\n            if ((studentTotalCredits==120) &&(disertationGrade<50)) { //pass mark is 50\n                return \"PGDip\";\n            }\n            //Special rule if student passes 60 credits of modules\n            if (studentTotalCredits==60) {\n                return \"PGCert\";\n            }\n\n            if (meanGrade>=69.5) {\n                return \"distinction\";\n            }\n            else if (meanGrade>=59.5) {\n                return \"merit\";\n            }\n            else if (meanGrade>=49.5) {\n                return \"pass\";\n            }\n            else {\n                return \"fail\";\n            }\n        }\n        //check if BSc,BEng degree\n        else if (levelCode.equals(\"3\") || levelCode.equals(\"2\") || levelCode.equals(\"1\")) {\n            if (((int)periodLabel.charAt(0)-64)-Integer.parseInt(levelCode)>=2) {\n                return \"pass (non-honours)\";\n            }\n            if (meanGrade>=69.5) {\n                return \"first class\";\n            }\n            else if (meanGrade>=59.5) {\n                return \"upper second\";\n            }\n            else if (meanGrade>=49.5) {\n                return \"lower second\";\n            }\n            else if (meanGrade>=44.5){\n                return \"third class\";\n            }\n            else if (meanGrade>=39.5){\n                return \"pass (non-honours)\";\n            }\n            else{\n                return \"fail\";\n            }\n        }\n        //else MComp/MEng degree\n        else {\n            if (meanGrade>=69.5) {\n                return \"first class\";\n            }\n            else if (meanGrade>=59.5) {\n                return \"upper second\";\n            }\n            else if (meanGrade>=49.5) {\n                return \"lower second\";\n            }\n            else {\n                return \"fail\";\n            }\n        }\n    }\n    public static double round(double value, int places) {\n        if (places < 0) throw new IllegalArgumentException();\n\n        long factor = (long) Math.pow(10, places);\n        value = value * factor;\n        long tmp = Math.round(value);\n        return (double) tmp / factor;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Project/src/Project_Code/Teacher/TeacherMain.java	(revision d7a5fbfeb9858d58967a0214ff277010e29683b8)
+++ Project/src/Project_Code/Teacher/TeacherMain.java	(date 1607092375056)
@@ -15,7 +15,9 @@
 public class TeacherMain extends User {
 
 
-    private DBController dac = super.getDataAccessController();
+    private DBController con = super.getDataAccessController();
+    private Map<String, Double> recModules = new HashMap<String, Double>();
+    private Map<String, Integer> moduleCredits = new HashMap<String, Integer>();
 
     public TeacherMain(String username) {
         super(username, "Teacher");
@@ -34,9 +36,9 @@
             else{
                 query = "SELECT COUNT(*) FROM Student WHERE registrationNo=?";
             }
-            PreparedStatement pstmt = dac.getPreparedStatement(query);
+            PreparedStatement pstmt = con.getPreparedStatement(query);
             pstmt.setString(1, value);
-            result = dac.performPreparedStatement(pstmt);
+            result = con.performPreparedStatement(pstmt);
             int n = 0;
             while (result.next()) {
                 n = result.getInt(1);
@@ -75,9 +77,9 @@
         //Method assumes there is only one match
         ResultSet result = null;
         try {
-            PreparedStatement pstmt = dac.getPreparedStatement("SELECT * FROM Student WHERE username=?");
+            PreparedStatement pstmt = con.getPreparedStatement("SELECT * FROM Student WHERE username=?");
             pstmt.setString(1, username);
-            result = dac.performPreparedStatement(pstmt);
+            result = con.performPreparedStatement(pstmt);
             while (result.next()) {
                 return result.getString("registrationNo");
             }
@@ -95,9 +97,9 @@
         ResultSet result = null;
         String[] results = new String[2];
         try {
-            PreparedStatement pstmt = dac.getPreparedStatement("SELECT * FROM Student WHERE registrationNo=?");
+            PreparedStatement pstmt = con.getPreparedStatement("SELECT * FROM Student WHERE registrationNo=?");
             pstmt.setString(1, regNo);
-            result = dac.performPreparedStatement(pstmt);
+            result = con.performPreparedStatement(pstmt);
             while (result.next()) {
                 results[0] =  result.getString("username");
                 results[1] =  result.getString("degreeCode");
@@ -117,9 +119,9 @@
         ResultSet result = null;
         String[] results = new String[2];
         try {
-            PreparedStatement pstmt = dac.getPreparedStatement("SELECT * FROM Users WHERE username=?");
+            PreparedStatement pstmt = con.getPreparedStatement("SELECT * FROM Users WHERE username=?");
             pstmt.setString(1, username);
-            result = dac.performPreparedStatement(pstmt);
+            result = con.performPreparedStatement(pstmt);
             while (result.next()) {
                 results[0] =  result.getString("forename");
                 results[1] =  result.getString("surname");
@@ -138,9 +140,9 @@
         //Method assumes there is only one match
         ResultSet result = null;
         try {
-            PreparedStatement pstmt = dac.getPreparedStatement("SELECT * FROM Student WHERE registrationNo=?");
+            PreparedStatement pstmt = con.getPreparedStatement("SELECT * FROM Student WHERE registrationNo=?");
             pstmt.setString(1, regNo);
-            result = dac.performPreparedStatement(pstmt);
+            result = con.performPreparedStatement(pstmt);
             while (result.next()) {
                 return result.getString("username");
             }
@@ -157,9 +159,9 @@
         //Method assumes there is only one match
         ResultSet result = null;
         try {
-            PreparedStatement pstmt = dac.getPreparedStatement("SELECT * FROM Student WHERE registrationNo=?");
+            PreparedStatement pstmt = con.getPreparedStatement("SELECT * FROM Student WHERE registrationNo=?");
             pstmt.setString(1, regNo);
-            result = dac.performPreparedStatement(pstmt);
+            result = con.performPreparedStatement(pstmt);
             while (result.next()) {
                 return result.getString("degreeCode");
             }
@@ -176,9 +178,9 @@
         //Method assumes there is only one match
         ResultSet result = null;
         try {
-            PreparedStatement pstmt = dac.getPreparedStatement("SELECT * FROM Users WHERE username=?");
+            PreparedStatement pstmt = con.getPreparedStatement("SELECT * FROM Users WHERE username=?");
             pstmt.setString(1, getUsername(regNo));
-            result = dac.performPreparedStatement(pstmt);
+            result = con.performPreparedStatement(pstmt);
             while (result.next()) {
                 return result.getString("forename");
             }
@@ -195,9 +197,9 @@
         //Method assumes there is only one match
         ResultSet result = null;
         try {
-            PreparedStatement pstmt = dac.getPreparedStatement("SELECT * FROM Users WHERE username=?");
+            PreparedStatement pstmt = con.getPreparedStatement("SELECT * FROM Users WHERE username=?");
             pstmt.setString(1, getUsername(regNo));
-            result = dac.performPreparedStatement(pstmt);
+            result = con.performPreparedStatement(pstmt);
             while (result.next()) {
                 return result.getString("surname");
             }
@@ -214,10 +216,10 @@
         //Method assumes there is only one match
         ResultSet result = null;
         try {
-            PreparedStatement pstmt = dac.getPreparedStatement("SELECT * FROM Period WHERE registrationNo=? AND periodLabel=?");
+            PreparedStatement pstmt = con.getPreparedStatement("SELECT * FROM Period WHERE registrationNo=? AND periodLabel=?");
             pstmt.setString(1, regNo);
             pstmt.setString(2, periodLabel);
-            result = dac.performPreparedStatement(pstmt);
+            result = con.performPreparedStatement(pstmt);
             while (result.next()) {
                 return result.getString("levelCode");
             }
@@ -235,9 +237,9 @@
         ResultSet result = null;
         List<String> periodList = new ArrayList<>();
         try {
-            PreparedStatement pstmt = dac.getPreparedStatement("SELECT * FROM Period WHERE registrationNo=?");
+            PreparedStatement pstmt = con.getPreparedStatement("SELECT * FROM Period WHERE registrationNo=?");
             pstmt.setString(1, regNo);
-            result = dac.performPreparedStatement(pstmt);
+            result = con.performPreparedStatement(pstmt);
             while (result.next()) {
                 periodList.add(result.getString("periodLabel"));
             }
@@ -256,10 +258,10 @@
         ResultSet result = null;
         List<String> moduleList = new ArrayList<>();
         try {
-            PreparedStatement pstmt = dac.getPreparedStatement("SELECT * FROM Study WHERE registrationNo=? AND periodLabel=?");
+            PreparedStatement pstmt = con.getPreparedStatement("SELECT * FROM Study WHERE registrationNo=? AND periodLabel=?");
             pstmt.setString(1, regNo);
             pstmt.setString(2, periodLabel);
-            result = dac.performPreparedStatement(pstmt);
+            result = con.performPreparedStatement(pstmt);
             while (result.next()) {
                 moduleList.add(result.getString("moduleCode"));
             }
@@ -278,11 +280,11 @@
         ResultSet result = null;
         String[] results = new String[2];
         try {
-            PreparedStatement pstmt = dac.getPreparedStatement("SELECT * FROM Study WHERE registrationNo=? AND moduleCode=? AND periodLabel=?");
+            PreparedStatement pstmt = con.getPreparedStatement("SELECT * FROM Study WHERE registrationNo=? AND moduleCode=? AND periodLabel=?");
             pstmt.setString(1, regNo);
             pstmt.setString(2, moduleCode);
             pstmt.setString(3, periodLabel);
-            result = dac.performPreparedStatement(pstmt);
+            result = con.performPreparedStatement(pstmt);
             while (result.next()) {
                 results[0] =  result.getString("initialGrade");
                 results[1] =  result.getString("resitGrade");
@@ -300,13 +302,13 @@
     public void updateGrades(String regNo, String moduleCode, String periodLabel, String initGrade, String resitGrade){
         //Method assumes there is only one match
         try {
-            PreparedStatement pstmt = dac.getPreparedStatement("UPDATE Study SET initialGrade=?, resitGrade=? WHERE registrationNo=? AND moduleCode=? AND periodLabel=?");
+            PreparedStatement pstmt = con.getPreparedStatement("UPDATE Study SET initialGrade=?, resitGrade=? WHERE registrationNo=? AND moduleCode=? AND periodLabel=?");
             pstmt.setString(1, initGrade);
             pstmt.setString(2, resitGrade);
             pstmt.setString(3, regNo);
             pstmt.setString(4, moduleCode);
             pstmt.setString(5, periodLabel);
-            dac.performPreparedUpdate(pstmt);
+            con.performPreparedUpdate(pstmt);
         }
         catch(SQLException ex) {
             //display error message and leave the application
@@ -321,10 +323,10 @@
         List<String> initGrades = new ArrayList<>();
         List<String> resitGrades = new ArrayList<>();
         try {
-            PreparedStatement pstmt = dac.getPreparedStatement("SELECT * FROM Study WHERE registrationNo=? AND periodLabel=?");
+            PreparedStatement pstmt = con.getPreparedStatement("SELECT * FROM Study WHERE registrationNo=? AND periodLabel=?");
             pstmt.setString(1, regNo);
             pstmt.setString(2, periodLabel);
-            result = dac.performPreparedStatement(pstmt);
+            result = con.performPreparedStatement(pstmt);
             while (result.next()) {
                 initGrades.add(result.getString("initialGrade"));
                 resitGrades.add(result.getString("resitGrade"));
@@ -359,23 +361,27 @@
         }
         return null;
     }
+    public Map<String,Integer> getModuleCredits() {
+        return moduleCredits;
+    }
+
     public String getOutcome(String regNo,String periodLabel,String levelCode,String degreeCode,double meanGrade) {
         //check if it is 1-year MSc
         if (degreeCode.substring(3,4).equals("P")) {
             //check if student failed dissertation but succeeded in all the other modules
             double disertationGrade=0;
             int studentTotalCredits=0;
-            //for (Map.Entry<String, Double> entry : recModules.entrySet()) {
-            //    int credit=moduleCredits.get(entry.getKey());
-            //    if (credit==60) {
-            //        //get the grade for the dissertation module
-            //        disertationGrade=entry.getValue();
-            //    }
-            //   if (entry.getValue()>50) {
-            //        studentTotalCredits+=credit;
-            //    }
-            //}
-            //Special rule if student passes modules but fails dissertaion
+            for (Map.Entry<String, Double> entry : recModules.entrySet()) {
+                int credit=moduleCredits.get(entry.getKey());
+                if (credit==60) {
+                    //get the grade for the dissertation module
+                    disertationGrade=entry.getValue();
+                }
+               if (entry.getValue()>50) {
+                    studentTotalCredits+=credit;
+                }
+            }
+            //Special rule if student passes modules but fails dissertation
             if ((studentTotalCredits==120) &&(disertationGrade<50)) { //pass mark is 50
                 return "PGDip";
             }
